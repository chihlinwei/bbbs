ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
dat.mean.mean$Longitude <- round(dat.mean.mean$Longitude, 4)
dat.mean.mean$Latitude <- round(dat.mean.mean$Latitude, 4)
dat.mean.mean$Depth <- round(dat.mean.mean$Depth, 0)
dat.mean.mean$Density <- round(dat.mean.mean$Density, 0)
dat.mean.mean$sd <- round(dat.mean.mean$sd, 1)
dat.mean.mean$sd <- round(dat.mean.mean$se, 1)
kable(dat.mean.mean)
dat <- subset(mac, Size<100)
dat <- subset(dat, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1126")
dat.sum <- summaryBy(Size+Area+Longitude+Latitude+Depth~Habitat+Cruise+Station+Deployment+Tube, data=dat, FUN=c(sum, mean))
dat.sum$Biomass <- dat.sum$Size.sum/dat.sum$Area.mean
dat.mean <- summaryBy(Biomass+Longitude.mean+Latitude.mean+Depth.mean~Habitat+Cruise+Station, data=dat.sum, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
# Bad core at OR1 1102 GS4 (sediment only 19 cm)
bad <- with(dat.mean, Cruise=="OR1_1102"&Station=="GS4")
dat.mean <- subset(dat.mean, !bad)
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean.mean", "Latitude.mean.mean", "Depth.mean.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
#scale_fill_manual(values=c("black","gray"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
dat.mean <- summaryBy(Biomass+Longitude+Latitude+Depth~Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.1, 120.5, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=level.colors(loc$Density, at = 10^pretty(log10(loc$Density), 100), col.regions=jet.colors))
}
tbspplot(r, panel=extra)
loc$Habitat
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=loc$Habitat)
}
tbspplot(r, panel=extra)
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("red", "green"), each=4))
}
tbspplot(r, panel=extra)
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("red", "green"), each=4))
sp.text(loc, loc$Station)
}
tbspplot(r, panel=extra)
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("red", "green"), each=4))
sp.text(loc, txt=loc$Station)
}
tbspplot(r, panel=extra)
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("red", "green"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=2, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=200), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
plot(TWBathyMap::bathy)
TWBathyMap::bathy
swtMap::bathy
swtmap::bathy
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
tbspplot(r, panel=extra)
tbspplot
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.1, 120.1, 120.5, 120.5, 120.1)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b)
}
tbspplot(r, panel=extra, )
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.1, 120.1, 120.5, 120.5, 120.1)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b)
}
tbspplot(r, panel=extra, )
TWBathyMap::bathy
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b)
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.45))
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.375), "0")
sp.text(loc = c(120.38, 22.375), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c")
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c", lty=2)
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c", lty=2)
sp.points(loc, cex=0.5, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c", lty=2)
sp.points(loc, cex=0.5, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
}
tbspplot(r, panel=extra)
?spplot
tbspplot <-
function(x, ...){
slope <- terrain(x, opt="slope")
aspect <- terrain(x, opt="aspect")
hill <- hillShade(slope, aspect, 80, 270)
p2 <- spplot(hill, col.regions=grey(0:100/100), cut=100, colorkey=FALSE)
pal <- tb.colors(x)
p1 <- spplot(x, col.regions=alpha(pal$col, 0.6), at=pal$breaks,
colorkey=list(space="top", labels=list(cex=1)),
scales=list(draw = TRUE, cex=1)
,...)
p1+as.layer(p2, under=T)
}
loc <- dat.mean.mean
coordinates(loc) <- c("Longitude", "Latitude")
r <- crop(swtmap::bathy, extent(120.15, 120.45, 22.1, 22.5))
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=c(seq(-1800, -200, by=100), 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c", lty=2)
sp.points(loc, cex=0.5, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
}
tbspplot(r, panel=extra)
