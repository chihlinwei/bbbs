sp.pointLabel(loc, labels=loc$Station, cex=1.5, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c", lty=2)
sp.points(loc, cex=0.5, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
}
tbspplot(r, panel=extra)
library(bbbs)
?mac
?mei
head(mei)
head(mac)
library(bbbs)
library(bbbs)
?mac
library(bbbs)
?mac
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(doSNOW)
library(foreach)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Size (complete macrofauna specimen)
mac_s <- subset(mac, Condition=="C")
mac_s <- splitBy(~Category+Cruise+Station, mac_s)
# Abundance (specimen with head)
mac_a <- subset(mac, !(Condition=="F" | is.na(Condition)))
mac_a <- summaryBy(Taxon~Category+Cruise+Station+Deployment+Tube, data=mac_a, FUN=length, var.names="Abundance", keep.names=TRUE)
# Average by Cruise/Station and then scale the abundance to 3 multicore tubes
mac_a <- summaryBy(Abundance~Category+Cruise+Station, data=mac_a, FUN=mean, var.names="Abundance", keep.names=TRUE)
mac_a$Abundance <- mac_a$Abundance*3
# Total abundce in each sample
sn <- with(mac_a, paste(Category, Cruise, Station, sep="|"))
abund <- mac_a[match(names(mac_s), sn),]$Abundance
# Resample the size data (with replacement) by the total abundance in each sample
sample_fun <-
function(i){
keep <- sample(1:dim(mac_s[[i]])[1], si=abund[i], replace=TRUE)
mac_s[[i]][keep,]
}
# Simulated macrofauna size data
cl<-makeCluster(4) # change the 4 to your number of CPU cores
registerDoSNOW(cl) # register the SNOW parallel backend with the foreach package
simu <- foreach(i=1:length(mac_s)) %dopar% sample_fun(i)
stopCluster(cl) # stop a SNOW cluster
ggplot(data=ldply(simu),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
mac_s <- ldply(simu)
# Only show 1096, 1114, 1126 macrofauna size simulation because only these cruise have ok polychaete sizes
ggplot(data=subset(mac_s, Cruise=="OR1_1096"|Cruise=="OR1_1114"|Cruise=="OR1_1126"),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
abund
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)),], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
mac <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Size (complete specimen)
mac_s <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_s,
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Observed polychaete sizes
ggplot(data=subset(mac_s, Category=="Polychaeta"),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)),], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
mac <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Size (complete specimen)
mac_c <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_c,
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Observed polychaete sizes
ggplot(data=subset(mac_c, Category=="Polychaeta"),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Hapacticoid and others
col_types <- c("text", "text", "text", "numeric", "numeric", "numeric", "text","text", "text", "text", "text", "text", "text", "numeric", "numeric", "numeric", "numeric", "text")
mei <- NULL
for(i in 1:3){
d <- as.data.frame(read_excel("../excel/GPSC_meio_size_2020.01.07.xlsx", sheet=i, col_types=col_types))
mei <- rbind(mei, d)
}
# Get water depth
mei <- cbind(depth[match(paste(mei$Cruise, mei$Station), paste(depth$Cruise, depth$Station)),], mei)
mei$Wt <- mei$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100")
mei$Depth.zone <- cut(mei$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by nematods, harpacticoids and others
Category <- as.character(mei$Taxon)
Category[Category!="Nematoda"&Category!="Harpacticoida"] <- "Others"
mei <- splitBy(~Category+Cruise+Station, cbind(Category, mei))
mei <- ldply(mei, .id=NULL)
ggplot(data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"),
aes(x=log(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_grid(Cruise~Category)+
labs(y="Frequency", x=expression(Log~body~size~(mg~individual^-1)))+
theme_bw()%+replace% large #%+replace% dark
# Hapacticoid and others
col_types <- c("text", "text", "text", "numeric", "numeric", "numeric", "text","text", "text", "text", "text", "text", "text", "numeric", "numeric", "numeric", "numeric", "text")
mei <- NULL
for(i in 1:3){
d <- as.data.frame(read_excel("../excel/GPSC_meio_size_2020.01.07.xlsx", sheet=i, col_types=col_types))
mei <- rbind(mei, d)
}
# Get water depth
mei <- cbind(depth[match(paste(mei$Cruise, mei$Station), paste(depth$Cruise, depth$Station)),], mei)
mei$Wt <- mei$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100")
mei$Depth.zone <- cut(mei$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by nematods, harpacticoids and others
Category <- as.character(mei$Taxon)
Category[Category!="Nematoda"&Category!="Harpacticoida"] <- "Others"
mei <- splitBy(~Category+Cruise+Station, cbind(Category, mei))
mei <- ldply(mei, .id=NULL)
ggplot(data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"),
aes(x=log(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_grid(Cruise~Category)+
labs(y="Frequency", x=expression(Log~body~size~(mg~individual^-1)))+
theme_bw()%+replace% large #%+replace% dark
# Size (complete macrofauna specimen)
mac_c <- subset(mac, Condition=="C")
mac_c <- splitBy(~Category+Cruise+Station, mac_c)
# Abundance (specimen with head)
mac_a <- subset(mac, !(Condition=="F" | is.na(Condition)))
mac_a <- summaryBy(Taxon~Category+Cruise+Station+Deployment+Tube, data=mac_a, FUN=length, var.names="Abundance", keep.names=TRUE)
# Average by Cruise/Station and then scale the abundance to 3 multicore tubes
mac_a <- summaryBy(Abundance~Category+Cruise+Station, data=mac_a, FUN=mean, var.names="Abundance", keep.names=TRUE)
mac_a$Abundance <- mac_a$Abundance*3
# Total abundce in each sample
sn <- with(mac_a, paste(Category, Cruise, Station, sep="|"))
abund <- mac_a[match(names(mac_c), sn),]$Abundance
# Resample the size data (with replacement) by the total abundance in each sample
sample_fun <-
function(i){
keep <- sample(1:dim(mac_c[[i]])[1], si=abund[i], replace=TRUE)
mac_c[[i]][keep,]
}
# Simulated macrofauna size data
cl<-makeCluster(4) # change the 4 to your number of CPU cores
registerDoSNOW(cl) # register the SNOW parallel backend with the foreach package
simu <- foreach(i=1:length(mac_c)) %dopar% sample_fun(i)
stopCluster(cl) # stop a SNOW cluster
ggplot(data=ldply(simu),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
mac_s <- ldply(simu)
subset(mac, Condition=="C")
subset(mac, Condition!="C")$Class
subset(mac, Condition!="C")$Taxon
unique(subset(mac, Condition!="C")$Taxon)
unique(subset(mac, Condition!="C")$Category)
names(mac)
head(depth)
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
mac <- cbind(depth[
match(paste(mac$Cruise, mac$Station, mac$Deployment), paste(depth$Cruise, depth$Station, mac$Deployment))
is.na(match(paste(mac$Cruise, mac$Station, mac$Deployment), paste(depth$Cruise, depth$Station, mac$Deployment)))
which(is.na(match(paste(mac$Cruise, mac$Station, mac$Deployment), paste(depth$Cruise, depth$Station, mac$Deployment))))
depth
names(mac)
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)), c("Region", "Date", "Longitude", "Longitude", "Depth", "Corer", "Area", "Sieve")], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
mac <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Size (complete specimen)
mac_c <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_c,
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
head(mac)
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)), c("Region", "Date", "Longitude", "Longitude", "Depth", "Corer", "Area", "Sieve")], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
mac <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Size (complete specimen)
mac_c <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_c,
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Observed polychaete sizes
ggplot(data=subset(mac_c, Category=="Polychaeta"),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
head(mac)
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)), c("Region", "Date", "Longitude", "Latitude", "Depth", "Corer", "Area", "Sieve")], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
mac <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Size (complete specimen)
mac_c <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_c,
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Observed polychaete sizes
ggplot(data=subset(mac_c, Category=="Polychaeta"),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Size (complete macrofauna specimen)
mac_c <- subset(mac, Condition=="C")
mac_c <- splitBy(~Category+Cruise+Station+Depolyment+Tube, mac_c)
mac_c
names(mac)
# Size (complete macrofauna specimen)
mac_c <- subset(mac, Condition=="C")
mac_c <- splitBy(~Category+Cruise+Station+Deployment+Tube, mac_c)
mac_c
# Which taxa has fragment specimen?
unique(subset(mac, Condition!="C"))
# Which taxa has fragment specimen?
unique(subset(mac, Condition!="C")$Taxon)
# Size (complete macrofauna specimen)
mac_c <- subset(mac, Condition=="C")
mac_c <- splitBy(~Category+Cruise+Station+Deployment+Tube, mac_c)
# Size (complete macrofauna specimen)
mac_c <- subset(mac, Condition=="C")
mac_c <- splitBy(~Category+Cruise+Station+Deployment+Tube, mac_c)
# Abundance (specimen with head)
mac_a <- subset(mac, !(Condition=="F" | is.na(Condition)))
mac_a <- summaryBy(Taxon~Category+Cruise+Station+Deployment+Tube, data=mac_a, FUN=length, var.names="Abundance", keep.names=TRUE)
# Total abundce in each sample
sn <- with(mac_a, paste(Category, Cruise, Station, Deployment, Tube, sep="|"))
sn
match(names(mac_c), sn)
mac_a[match(names(mac_c), sn),]$Abundance
# Total abundce in each sample
sn <- with(mac_a, paste(Category, Cruise, Station, Deployment, Tube, sep="|"))
abund <- mac_a[match(names(mac_c), sn),]$Abundance
# Which taxa has fragment specimen?
unique(subset(mac, Condition!="C")$Taxon)
grep("Polychaeta|Ophiuroidea")
grep("Polychaeta|Ophiuroidea", sn)
i=185
mac_c[[i]]
abund[i]
sn[185]
sn[186]
sn[187]
sn[389]
mac_c
sn[1]
mac_a[match(names(mac_c), sn),]
mac_c
mac_c[[1]]
mac_c[1]
abund[1]
names(mac_c)
grep("Polychaeta|Ophiuroidea", names(mac_c))
# Resample the size data (with replacement) by the total abundance in each sample
sample_fun <-
function(i){
keep <- sample(1:dim(mac_c[[i]])[1], si=abund[i], replace=TRUE)
mac_c[[i]][keep,]
}
# Simulated macrofauna size data
cl<-makeCluster(4) # change the 4 to your number of CPU cores
registerDoSNOW(cl) # register the SNOW parallel backend with the foreach package
simu <- foreach(i=grep("Polychaeta|Ophiuroidea", names(mac_c))) %dopar% sample_fun(i)
stopCluster(cl) # stop a SNOW cluster
simu
names(simu)
length(simu)
# Only Polychaeta and Ophiuroidea needs to be resampled
keep <- grep("Polychaeta|Ophiuroidea", names(mac_c))
# Simulated macrofauna size data
cl<-makeCluster(4) # change the 4 to your number of CPU cores
registerDoSNOW(cl) # register the SNOW parallel backend with the foreach package
simu <- foreach(i=keep) %dopar% sample_fun(i)
stopCluster(cl) # stop a SNOW cluster
mac_c[keep]
length(mac_c[keep])
ggplot(data=ldply(simu),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
1:length(keep)
# Replace the simulated Polychaeta and Ophiuroidea data
for(i in 1:length(keep)) mac_c[[keep[i]]] <- simu[[i]]
names(mac_c)
ggplot(data=ldply(mac_c),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
dim(ldply(mac_c))
mac_s <- ldply(mac_c)
ggplot(data=ldply(mac_c),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=ldply(mac_c),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
