mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
# Size (complete specimen)
mac_s <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_s,
aes(x=log10(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large %+replace% dark
head(mac)
Hapacticoid and others
col_types <- c("text", "text", "text", "numeric", "numeric", "numeric", "text","text", "text", "text", "text", "text", "text", "numeric", "numeric", "numeric", "numeric", "text")
mei <- NULL
for(i in 1:3){
d <- as.data.frame(read_excel("excel/GPSC_meio_size_2020.01.07.xlsx", sheet=i, col_types=col_types))
mei <- rbind(mei, d)
}
# Get water depth
mei <- cbind(depth[match(paste(mei$Cruise, mei$Station), paste(depth$Cruise, depth$Station)),], mei)
head(mei)
mei$Wt <- mei$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100")
mei$Depth.zone <- cut(mei$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by nematods, harpacticoids and others
Category <- as.character(mei$Taxon)
Category[Category!="Nematoda"&Category!="Harpacticoida"] <- "Others"
head(mei)
ggplot(data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"),
aes(x=log(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_grid(Cruise~Category)+
labs(y="Frequency", x=expression(Log~body~size~(mg~individual^-1)))+
theme_bw()%+replace% large
# Split the size data by nematods, harpacticoids and others
Category <- as.character(mei$Taxon)
Category[Category!="Nematoda"&Category!="Harpacticoida"] <- "Others"
mei <- splitBy(~Category+Cruise+Station, cbind(Category, mei))
mei <- ldply(mei)
head(mei)
ggplot(data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"),
aes(x=log(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_grid(Cruise~Category)+
labs(y="Frequency", x=expression(Log~body~size~(mg~individual^-1)))+
theme_bw()%+replace% large
# Hapacticoid and others
col_types <- c("text", "text", "text", "numeric", "numeric", "numeric", "text","text", "text", "text", "text", "text", "text", "numeric", "numeric", "numeric", "numeric", "text")
mei <- NULL
for(i in 1:3){
d <- as.data.frame(read_excel("excel/GPSC_meio_size_2020.01.07.xlsx", sheet=i, col_types=col_types))
mei <- rbind(mei, d)
}
# Get water depth
mei <- cbind(depth[match(paste(mei$Cruise, mei$Station), paste(depth$Cruise, depth$Station)),], mei)
mei$Wt <- mei$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100")
mei$Depth.zone <- cut(mei$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by nematods, harpacticoids and others
Category <- as.character(mei$Taxon)
Category[Category!="Nematoda"&Category!="Harpacticoida"] <- "Others"
mei <- splitBy(~Category+Cruise+Station, cbind(Category, mei))
mei <- ldply(mei, .id=NULL)
ggplot(data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"),
aes(x=log(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_grid(Cruise~Category)+
labs(y="Frequency", x=expression(Log~body~size~(mg~individual^-1)))+
theme_bw()%+replace% large %+replace% dark
head(mei)
head(mac)
save(mac, file="data/mac.rda")
save(mei, file="data/mei.rda")
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)),], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
# Size (complete specimen)
mac_s <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_s,
aes(x=log10(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large %+replace% dark
# Hapacticoid and others
col_types <- c("text", "text", "text", "numeric", "numeric", "numeric", "text","text", "text", "text", "text", "text", "text", "numeric", "numeric", "numeric", "numeric", "text")
mei <- NULL
for(i in 1:3){
d <- as.data.frame(read_excel("excel/GPSC_meio_size_2020.01.07.xlsx", sheet=i, col_types=col_types))
mei <- rbind(mei, d)
}
# Hapacticoid and others
col_types <- c("text", "text", "text", "numeric", "numeric", "numeric", "text","text", "text", "text", "text", "text", "text", "numeric", "numeric", "numeric", "numeric", "text")
mei <- NULL
for(i in 1:3){
d <- as.data.frame(read_excel("../excel/GPSC_meio_size_2020.01.07.xlsx", sheet=i, col_types=col_types))
mei <- rbind(mei, d)
}
# Get water depth
mei <- cbind(depth[match(paste(mei$Cruise, mei$Station), paste(depth$Cruise, depth$Station)),], mei)
mei$Wt <- mei$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100")
mei$Depth.zone <- cut(mei$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by nematods, harpacticoids and others
Category <- as.character(mei$Taxon)
Category[Category!="Nematoda"&Category!="Harpacticoida"] <- "Others"
mei <- splitBy(~Category+Cruise+Station, cbind(Category, mei))
mei <- ldply(mei, .id=NULL)
ggplot(data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"),
aes(x=log(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_grid(Cruise~Category)+
labs(y="Frequency", x=expression(Log~body~size~(mg~individual^-1)))+
theme_bw()%+replace% large %+replace% dark
get_wd()
get_wd
get_wd()
library(bbbs)
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("PLBfunctions.r")
getwd()
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("rmd/PLBfunctions.r")
hab <- splitBy(~Cruise+Habitat, data=si)
library(bbbs)
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("rmd/PLBfunctions.r")
hab <- splitBy(~Cruise+Habitat, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
#wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
#facet_wrap(~Cruise)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
head(nbss)
head(plb)
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
hab <- splitBy(~Cruise+Habitat, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
# Remove the two smallest bins
wt <-lapply(wt, FUN=function(x){x <- x[x>1.144409e-05]; return(x)})
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
#wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=2)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
# facet_wrap(~Cruise, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large %+replace% dark
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=2)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large %+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=2)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large %+replace% dark
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
#wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
#wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_grid(Cruise~Depth)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_grid(Cruise~Depth)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
# Remove the two smallest bins
wt <-lapply(wt, FUN=function(x){x <- x[x>1.144409e-05]; return(x)})
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
#wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_grid(Cruise~Depth)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=2)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
facet_grid(Cruise~Depth)+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large %+replace% dark
hab_pol <- splitBy(~Cruise+Habitat+Category, data=subset(si, Category=="Polychaeta" & (Cruise=="OR1_1096"|Cruise=="OR1_1114"|Cruise=="OR1_1126")))
hab_nem <- splitBy(~Cruise+Habitat+Category, data=subset(si, Category=="Nematoda" &  (Cruise=="OR1_1126"|Cruise=="OR1_1126")))
hab_har <- splitBy(~Cruise+Habitat+Category, data=subset(si, Category=="Harpacticoida" & (Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")))
hab <- rbind(ldply(hab_nem), ldply(hab_har), ldply(hab_pol))
hab <- splitBy(~Habitat+Category, hab)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Category")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>21]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Category")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Category, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
hab_pol <- splitBy(~Cruise+Habitat+Category, data=subset(si, Category=="Polychaeta" & (Cruise=="OR1_1096"|Cruise=="OR1_1114"|Cruise=="OR1_1126")))
hab_nem <- splitBy(~Cruise+Habitat+Category, data=subset(si, Category=="Nematoda" & (Cruise=="OR1_1114"|Cruise=="OR1_1126")))
hab_har <- splitBy(~Cruise+Habitat+Category, data=subset(si, Category=="Harpacticoida" & (Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")))
# Remove the two smallest bins
hab_pol <-lapply(hab_pol, FUN=function(x){x <- x[x$Wt>5.859375e-03,]; return(x)})
hab_nem <-lapply(hab_nem, FUN=function(x){x <- x[x$Wt>1.144409e-05,]; return(x)})
hab <- rbind(ldply(hab_nem), ldply(hab_har), ldply(hab_pol))
hab <- splitBy(~Habitat+Category, hab)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Category")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>21]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Category")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Category, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Category")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=2)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
facet_wrap(~Category, scales="free_x")+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large %+replace% dark
