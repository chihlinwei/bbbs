scale_fill_manual(values=c("#f1a340", "#998ec3"))+
labs(y="NBSS Slope", x="")+
scale_y_reverse()+
facet_wrap(~Class)
b <- rbind(cbind(Class="Meiofauna", meib), cbind(Class="Macrofauna", macb))
b$Class <- factor(b$Class, levels=c("Meiofauna", "Macrofauna"))
b$Habitat <- factor(b$Habitat, levels=c("Canyon", "Slope"))
ggplot(data=b,
aes(x=Habitat, y=PLB.bMLE, ymin=PLB.MLE.bConf1, ymax=PLB.MLE.bConf2, colour=Habitat, fill=Habitat))+
geom_bar(stat = "identity")+
geom_errorbar()+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
labs(y="NBSS Slope", x="")+
scale_y_reverse()+
facet_wrap(~Class)+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
library(viridis)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
no_strip <- theme(strip.background = element_rect(colour=NA, fill=NA),
strip.text = element_text(colour=NA))
no_legend <- theme(legend.position = "none")
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
bks <- l2b(c(mei_s$Wt, mac_s$Wt))
# Macrofauna
hab_mac <- splitBy(~Habitat+Cruise, mac_s)
wt <- lapply(hab_mac, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab_mei <- splitBy(~Habitat+Cruise, data=mei_s)
wt <- lapply(hab_mei, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
nbss_mei <- cbind(info, nbss[, -1])
hab <- rbind(cbind(Class="Macro", ldply(hab_mac)[,c("Habitat", "Cruise", "Wt")]),
cbind(Class="Meio", ldply(hab_mei)[,c("Habitat", "Cruise", "Wt")]))
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
ggplot(data=hab,
aes(x=log10(Wt), fill=Habitat, size=Class, linetype=Class))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1.5,1))+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
#scale_fill_viridis(discrete = TRUE)+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Benthos", size="Habitat")+
facet_wrap(~Cruise, scales="free")+
theme_bw() %+replace% large #%+replace% dark
(f2a <- ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Habitat, shape=Class))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
facet_wrap(~Cruise, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg)), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
)
(f2b <- ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat, shape=Class))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
facet_wrap(~Cruise, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
)
hab <- splitBy(~Habitat+Cruise, data=subset(mac_s, Wt> 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss2 <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss2$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
nbss2_mac <- cbind(info, nbss2[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
plb_mac <- cbind(info, plb[, -1])
lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply
lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat|Cruise")
# Macrofauna > 1e-02
hab <- splitBy(~Habitat+Cruise, data=subset(mac_s, Wt> 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss2 <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss2$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
nbss2_mac <- cbind(info, nbss2[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
(macb <- lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat|Cruise"))
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
SortWt_mac <- cbind(info, SortWt[, -1])
# Slope meiofauna > 1e-03; canyon meiofauna > 0.5e-03
hab <- splitBy(~Habitat+Cruise, data=subset(mei_s, (Habitat == "Slope" & Wt > 1e-03) | (Habitat == "Canyon" & Wt > 0.5e-03)))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss2 <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss2$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
nbss2_mei <- cbind(info, nbss2[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
(meib <- lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat|Cruise"))
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
SortWt_mei <- cbind(info, SortWt[, -1])
nbss2 <- rbind(cbind(Class="Macro", nbss2_mac),
cbind(Class="Meio", nbss2_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
b <- rbind(cbind(Class="Meiofauna", meib), cbind(Class="Macrofauna", macb))
b
split(b$`Habitat|Cruise`m split="|")
split(b$`Habitat|Cruise`m split="[|]")
split(b$`Habitat|Cruise`, split="[|]")
split(b$`Habitat|Cruise`, split="|")
strsplit(b$`Habitat|Cruise`, split="|")
strsplit(b$`Habitat|Cruise`, split="[|]")
strsplit
strsplit(b$`Habitat|Cruise`)
strsplit(b$`Habitat|Cruise`, split="|")
strsplit(b$`Habitat|Cruise`, split="[|]")
b$`Habitat|Cruise`
meib
# Macrofauna > 1e-02
hab <- splitBy(~Habitat+Cruise, data=subset(mac_s, Wt> 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss2 <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss2$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
nbss2_mac <- cbind(info, nbss2[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
(macb <- lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply)
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
SortWt_mac <- cbind(info, SortWt[, -1])
# Slope meiofauna > 1e-03; canyon meiofauna > 0.5e-03
hab <- splitBy(~Habitat+Cruise, data=subset(mei_s, (Habitat == "Slope" & Wt > 1e-03) | (Habitat == "Canyon" & Wt > 0.5e-03)))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss2 <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss2$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
nbss2_mei <- cbind(info, nbss2[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
(meib <- lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply)
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Cruise")
SortWt_mei <- cbind(info, SortWt[, -1])
nbss2 <- rbind(cbind(Class="Macro", nbss2_mac),
cbind(Class="Meio", nbss2_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
meib
meib$.id
strsplit(meib$.id, split="[|]")
b <- rbind(cbind(Class="Meiofauna", meib), cbind(Class="Macrofauna", macb))
strsplit(b$.id, split="[|]")
strsplit(b$.id, split="[|]")%>%ldply
hc <- strsplit(b$.id, split="[|]")%>%ldply
names(hc) <- c("Habitat", "Cruise")
head(b)
cbind(hc, b[, -2])
b <- cbind(hc, b[, -2])
b$Class <- factor(b$Class, levels=c("Meiofauna", "Macrofauna"))
b$Habitat <- factor(b$Habitat, levels=c("Canyon", "Slope"))
factor(b$Cruise)
b <- rbind(cbind(Class="Meiofauna", meib), cbind(Class="Macrofauna", macb))
hc <- strsplit(b$.id, split="[|]")%>%ldply
names(hc) <- c("Habitat", "Cruise")
b <- cbind(hc, b[, -2])
b$Class <- factor(b$Class, levels=c("Meiofauna", "Macrofauna"))
b$Habitat <- factor(b$Habitat, levels=c("Canyon", "Slope"))
ggplot(data=b,
aes(x=Habitat, y=PLB.bMLE, ymin=PLB.MLE.bConf1, ymax=PLB.MLE.bConf2, colour=Habitat, fill=Habitat))+
geom_bar(stat = "identity")+
geom_errorbar()+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
labs(y="NBSS Slope", x="")+
scale_y_reverse()+
facet_grid(Cruise~Class)+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
no_legend <- theme(legend.position = "none")
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
bks <- l2b(si$Wt)
# Macrofauna
hab_mac <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna"))
wt <- lapply(hab_mac, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab_mei <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna"))
wt <- lapply(hab_mei, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
hab <- rbind(cbind(Class="Macro", ldply(hab_mac)),
cbind(Class="Meio", ldply(hab_mei)))
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
ggplot(data=hab[,1:32],
aes(x=log10(Wt), size=paste(Class, Habitat, sep=","), fill=paste(Class, Habitat, sep=",")))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1,2,1,2))+
scale_fill_manual(values=c("#f1a340", "#f1a340", "#998ec3", "#998ec3"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Size class, habitat", size="Size class, habitat")+
#facet_wrap(~Habitat)+
theme_bw() %+replace% large #%+replace% dark
(f2a <- ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Class, shape=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
#scale_colour_manual(values=c("black", "gray"))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg)))+
scale_y_continuous(breaks=seq(-4, 2, by=2))+
theme_bw() %+replace% large #%+replace% dark
)
(f2b <- ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
#scale_colour_manual(values=c("black", "gray"))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
)
# Macrofauna > 7.812500e-03
hab <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna" & Wt> 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
(macb <- lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat"))
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1.220703e-04
hab <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna" & Wt> 1e-03))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
(meib <- lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat"))
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
b <- rbind(cbind(Class="Meiofauna", meib), cbind(Class="Macrofauna", macb))
b$Class <- factor(b$Class, levels=c("Meiofauna", "Macrofauna"))
b$Habitat <- factor(b$Habitat, levels=c("Canyon", "Slope"))
ggplot(data=b,
aes(x=Habitat, y=PLB.bMLE, ymin=PLB.MLE.bConf1, ymax=PLB.MLE.bConf2, colour=Habitat, fill=Habitat))+
geom_bar(stat = "identity")+
geom_errorbar()+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
labs(y="NBSS Slope", x="")+
scale_y_reverse()+
facet_wrap(~Class)+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
no_legend <- theme(legend.position = "none")
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
hab <- splitBy(~Habitat, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
bks <- l2b(unlist(wt))
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss <- cbind(info, nbss[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
(p1 <- ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
)
(p2 <- ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
)
# Only use Wt>= 1e-03
hab <- splitBy(~Habitat, data=subset(si, Wt>=1e-03))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss <- cbind(info, nbss[, -1])
#wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat")
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb <- cbind(info, plb[, -1])
(p3 <- ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
)
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt <- cbind(info, SortWt[, -1])
(p4 <- ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=2)+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
#facet_wrap(~Cruise, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large #%+replace% dark
)
lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat")
b <- lapply(out, FUN=function(x)x[1:2]%>%unlist)%>%ldply(.id="Habitat")
b$Habitat <- factor(b$Habitat, levels=c("Canyon", "Slope"))
ggplot(data=b,
aes(x=Habitat, y=PLB.bMLE, ymin=PLB.MLE.bConf1, ymax=PLB.MLE.bConf2, colour=Habitat, fill=Habitat))+
geom_bar(stat = "identity")+
geom_errorbar()+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
labs(y="NBSS Slope", x="")+
scale_y_reverse()+
theme_bw() %+replace% large #%+replace% dark
