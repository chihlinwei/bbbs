out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
hab <- splitBy(~Habitat, data=mac)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path()+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path()+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
hab <- splitBy(~Habitat, data=subset(mac, Size>1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% dark %+replace% rotate
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% dark %+replace% rotate
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
hab <- splitBy(~Cruise+Habitat, data=mac)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path()+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
# Only keep size > 1e-2
hab <- splitBy(~Cruise+Habitat, data=subset(mac, Size>1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large %+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
facet_wrap(~Cruise, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% dark %+replace% rotate
hab <- splitBy(~Habitat+Depth.zone, data=mac)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>10]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19,1))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19,1))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19,1))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19,1))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19,1))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19,1))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
hab <- splitBy(~Habitat+Depth.zone, data=subset(mac, Size>1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>10]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19,1))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(19,1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large %+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
facet_wrap(Cruise~Depth, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% dark %+replace% rotate
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
facet_wrap(~Depth, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% dark %+replace% rotate
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
facet_wrap(~Depth, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% dark %+replace% rotate
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("PLBfunctions.r")
hab <- splitBy(~Habitat, data=mac)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat
#, colour=Habitat
))+
geom_point(size=5)+
geom_path()+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Only keep size > 1e-2
hab <- splitBy(~Habitat, data=subset(mac, Size>1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat
#, colour=Habitat
))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat
#, colour=Habitat
))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
hab <- splitBy(~Cruise+Habitat, data=mac)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat
#, colour=Habitat
))+
geom_point(size=5)+
geom_path()+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Only keep size > 1e-2
hab <- splitBy(~Cruise+Habitat, data=subset(mac, Size>1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, shape=Habitat
#, colour=Habitat
))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_shape_manual(values=c(19,1))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, shape=Habitat, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_shape_manual(values=c(19,1))+
facet_wrap(~Cruise, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
