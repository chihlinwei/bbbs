SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(TWBathyMap::bathy, e)
#r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.15, 120.15, 120.45, 120.45, 120.15)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
extra <- function(...){
panel.levelplot.raster(...)
sp.polygons(b, col="#e41a1c", lty=2)
sp.points(loc, cex=0.5, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
}
tbspplot(r, panel=extra)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(swtmap)
library(maptools)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- subset(abun, Cruise!="OR1_1128" & Cruise!="OR1_1132")
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
dat.mean$Longitude <- round(dat.mean$Longitude, 4)
dat.mean$Latitude <- round(dat.mean$Latitude, 4)
dat.mean$Depth <- round(dat.mean$Depth, 0)
dat.mean$Density <- round(dat.mean$Density, 0)
dat.mean$sd <- round(dat.mean$sd, 1)
dat.mean$se <- round(dat.mean$se, 1)
kable(dat.mean, align="c")
splitBy(~Habitat, dat.mean) %>% lapply(FUN=function(x)lm(log10(Density)~Depth, data=x) %>% summary)
f <- gls(log10(Density) ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=dat.mean, method = "REML")
kable(summary(f)$tTable)
# In canyon
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Canyon"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# In canyon
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Canyon"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# On slope
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Slope"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
dat.mean.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=dat.mean, FUN=c(mean, sd, length))
dat.mean.mean$Density.se <- dat.mean.mean$Density.sd/dat.mean.mean$Density.length^0.5
dat.mean.mean <- dat.mean.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(dat.mean.mean) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
ggplot(data=dat.mean.mean,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
dat.mean.mean$Longitude <- round(dat.mean.mean$Longitude, 4)
dat.mean.mean$Latitude <- round(dat.mean.mean$Latitude, 4)
dat.mean.mean$Depth <- round(dat.mean.mean$Depth, 0)
dat.mean.mean$Density <- round(dat.mean.mean$Density, 0)
dat.mean.mean$sd <- round(dat.mean.mean$sd, 1)
dat.mean.mean$sd <- round(dat.mean.mean$se, 1)
kable(dat.mean.mean)
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei_s, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(Biomass)~Depth, data=x) %>% summary)
f <- gls(log10(Biomass) ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=out, method = "REML")
kable(summary(f)$tTable)
dat.mean <- summaryBy(Biomass+Longitude+Latitude+Depth~Region+Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
BenthProdExampleData
# productivity of average individual per species and sample
data("BenthProdExampleData")
individualPB<-BenthicPB(BenthProdExampleData)
individualPB
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(swtmap)
library(TWBathyMap)
library(maptools)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Remove Cyclopoida and Calanoida
sort <- subset(sort, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], Abundance=abun$Abundance)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Remove outlier samples with only 1 individuals
bad <- with(dat, Abundance <=1 | (Cruise=="OR1_1102" & Station == "GS4") )
dat <- subset(dat, !bad)
dat$Density <- dat$Abundance/dat$Area
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth+Date~Habitat+Cruise+Station, data=dat, FUN=c(mean, sd, length))
dat.mean$Date.mean <- strftime(as.POSIXct(dat.mean$Date.mean, origin = "1970-01-01", tz = "Asia/Taipei"), format="%Y-%m-%d")
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Date.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "Date", "n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c", caption="OR1_1102 GS4, OR1_1126 GC2, and OR1_1126 GC3 Tube 2 had very low abundance and only single replication. They are removed as outliers before plotting")
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat,
shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.3)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
out
dat
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Abundance")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Abundance[keep] <- pola$Abundance
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Abundance[keep] <- opha$Abundance
dat.sum
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
head(dat.sum)
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
head(dat.sum)
dat <- mac
dat <- subset(dat, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
head(dat)
dat <- mac
dat <- subset(dat, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
dat.sum <- summaryBy(Wt+Area+Longitude+Latitude+Depth~Habitat+Cruise+Station+Deployment+Tube, data=dat, FUN=c(sum, mean))
dat.sum$Biomass <- dat.sum$Wt.sum/dat.sum$Area.mean
dat.mean <- summaryBy(Biomass+Longitude.mean+Latitude.mean+Depth.mean~Habitat+Cruise+Station, data=dat.sum, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean.mean", "Latitude.mean.mean", "Depth.mean.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
#scale_fill_manual(values=c("black","gray"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
dat.sum$wet.mass.g <- dat.sum$Wt/1000
dat.sum
head(BenthProdExampleData)
head(env)
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
#
read.csv("trait_wei.csv")
#
read.csv("../excel/trait_wei.csv")
#
tr <- read.csv("../excel/trait_wei.csv")
with(dat.sum, paste(Cruise, Station))
match(dat.sum$Taxon, tr$Taxon)
head(tr)
dat.sum <- cbind(dat.sum, tr[match(dat.sum$Taxon, tr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
head(dat.sum)
dat.sum$Wt*dat.sum$ConFac_j2mgwm
dat.sum$Wt*dat.sum$ConFac_j2mgwm/dat.sum$Count
dat.sum$Bodymass <- dat.sum$Wt*dat.sum$ConFac_j2mgwm/dat.sum$Count
head(dat.sum)
head(env)
head(mac)
with(dat.sum, paste(Cruise, Station))
with(mac, paste(Cruise, Station))
match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))
```{r}
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
head(dat.sum)
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
head(dat.sum)
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
#
tr <- read.csv("../excel/trait_wei.csv")
dat.sum <- cbind(dat.sum, tr[match(dat.sum$Taxon, tr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- dat.sum$Wt*dat.sum$ConFac_j2mgwm/dat.sum$Count
head(dat.sum)
match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station)))
names(env)
env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")]
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
head(dat.sum)
head(tr)
dat.sum <- cbind(dat.sum, tr[match(dat.sum$Taxon, tr$Taxon), -1:-3])
head(dat.sum)
names(tr)
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
#
tr <- read.csv("../excel/trait_wei.csv")
dat.sum <- cbind(dat.sum, tr[match(dat.sum$Taxon, tr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- dat.sum$Wt*dat.sum$ConFac_j2mgwm/dat.sum$Count
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, tr[match(dat.sum$Taxon, tr$Taxon), c(-1:-3, -21)])
head(dat.sum)
individualPB<-BenthicPB(dat.sum)
splitBy(~Cruise+Station+Deployment+Tube, dat.sum)
individualPB<-splitBy(~Cruise+Station+Deployment+Tube, dat.sum) %>% lapply(FUN=function(x)BenthicPB(x))
plitBy(~Cruise+Station+Deployment+Tube, dat.sum)[[1]]
splitBy(~Cruise+Station+Deployment+Tube, dat.sum)[[1]]
splitBy(~Cruise+Station+Deployment+Tube, dat.sum)[[2]]
splitBy(~Cruise+Station+Deployment+Tube, dat.sum)[[3]]
splitBy(~Cruise+Station+Deployment+Tube, dat.sum)[[4]]
individualPB<-splitBy(~Cruise+Station+Deployment+Tube, dat.sum) %>% lapply(FUN=function(x)BenthicPB(x))
head(BenthProdExampleData)
individualPB<-BenthicPB(BenthProdExampleData[, -1:-8])
PBresults<-cbind(BenthProdExampleData,individualPB)
individualPB<-BenthicPB(BenthProdExampleData[, -1:-8])
individualPB
dat.sum
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
#
tr <- read.csv("../excel/trait_wei.csv")
dat.sum <- cbind(dat.sum, tr[match(dat.sum$Taxon, tr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- dat.sum$Wt*dat.sum$ConFac_j2mgwm/dat.sum$Count
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, tr[match(dat.sum$Taxon, tr$Taxon), c(-1:-3, -21)])
individualPB<-BenthicPB(dat.sum)
individualPB
PBresults<-cbind(dat.sum,individualPB)
# annual secondary production in Joule per species and sample
productionJ<-PBresults$annual.PtoB*PBresults$Bodymass*PBresults$Count
productionJ
# conversion from Joule to gram carbon
productionC<-productionJ/(PBresults$ConFac_j2mgc*1000)
biomassC<-PBresults$Bodymass*PBresults$Count/(PBresults$ConFac_j2mgc*1000)
biomassC\
biomassC
