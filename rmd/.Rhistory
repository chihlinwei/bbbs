labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
head(si)
abun <- summaryBy(Wt~Cruise+Station+Station+Deployment+Tube+Subcore, data=subset(si, Class="Meiofauna"), FUN=length, var.names="Abundance", keep.names=TRUE)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)),], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
mac <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Size (complete specimen)
mac_s <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_s,
aes(x=log10(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Observed polychaete sizes
ggplot(data=subset(mac_s, Category=="Polychaeta"),
aes(x=log10(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
bks <- l2b(c(mei$Wt, mac$Wt))
# Macrofauna
hab_mac <- splitBy(~Habitat, mac)
wt <- lapply(hab_mac, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab_mei <- splitBy(~Habitat, data=mei)
wt <- lapply(hab_mei, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
hab <- rbind(cbind(Class="Macro", ldply(hab_mac)[,c("Habitat", "Wt")]),
cbind(Class="Meio", ldply(hab_mei)[,c("Habitat", "Wt")]))
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
ggplot(data=hab,
aes(x=log10(Wt), fill=paste(Class, Habitat, sep=","), size=paste(Class, Habitat, sep=",")))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1,2,1,2))+
scale_fill_manual(values=c("#e41a1c", "#e41a1c", "#4daf4a", "#4daf4a"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Size class, habitat", size="Size class, habitat")+
#facet_wrap(~Habitat)+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Class, shape=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Macrofauna > 7.812500e-03
hab <- splitBy(~Habitat, data=subset(mac, Wt> 7.812500e-03))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1.220703e-04
hab <- splitBy(~Habitat, data=subset(mei, Wt> 6.103516e-05))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Class, shape=Habitat))+
geom_point(size=2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large #%+replace% dark
nbss
# Macrofauna > 7.812500e-03
hab <- splitBy(~Habitat, data=subset(mac, Wt> 7.812500e-03))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1.220703e-04
hab <- splitBy(~Habitat, data=subset(mei, Wt> 7.324219e-04))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
nbss
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
bks <- l2b(c(mei$Wt, mac$Wt))
# Macrofauna
hab_mac <- splitBy(~Habitat, mac)
wt <- lapply(hab_mac, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab_mei <- splitBy(~Habitat, data=mei)
wt <- lapply(hab_mei, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
hab <- rbind(cbind(Class="Macro", ldply(hab_mac)[,c("Habitat", "Wt")]),
cbind(Class="Meio", ldply(hab_mei)[,c("Habitat", "Wt")]))
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
ggplot(data=hab,
aes(x=log10(Wt), fill=paste(Class, Habitat, sep=","), size=paste(Class, Habitat, sep=",")))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1,2,1,2))+
scale_fill_manual(values=c("#e41a1c", "#e41a1c", "#4daf4a", "#4daf4a"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Size class, habitat", size="Size class, habitat")+
#facet_wrap(~Habitat)+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Class, shape=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
nbss
# Macrofauna > 7.812500e-03
hab <- splitBy(~Habitat, data=subset(mac, Wt> 7.812500e-03))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1.220703e-04
hab <- splitBy(~Habitat, data=subset(mei, Wt> 9.155273e-05))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Macrofauna > 7.812500e-03
hab <- splitBy(~Habitat, data=subset(mac, Wt> 7.812500e-03))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1.220703e-04
hab <- splitBy(~Habitat, data=subset(mei, Wt> 1.831055e-04))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Class, shape=Habitat))+
geom_point(size=2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large #%+replace% dark
