scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$sd <- round(out$se, 1)
kable(out)
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], abun)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
dat$Density <- dat$Abundance/dat$Area
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth+Date~Habitat+Cruise+Station, data=dat, FUN=c(mean, sd, length))
dat.mean$Date.mean <- strftime(as.POSIXct(dat.mean$Date.mean, origin = "1970-01-01", tz = "Asia/Taipei"), format="%Y-%m-%d")
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Date.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "Date", "n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out)
# Outlier with very low abundance and only 1 replicate
bad <- with(out, (Cruise=="OR1_1102" & Station == "GS4")|(Cruise=="OR1_1126" & Station == "GC2"))
ggplot(data=subset(out, !=bad),
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], abun)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
dat$Density <- dat$Abundance/dat$Area
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth+Date~Habitat+Cruise+Station, data=dat, FUN=c(mean, sd, length))
dat.mean$Date.mean <- strftime(as.POSIXct(dat.mean$Date.mean, origin = "1970-01-01", tz = "Asia/Taipei"), format="%Y-%m-%d")
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Date.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "Date", "n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out)
# Outlier with very low abundance and only 1 replicate
bad <- with(out, (Cruise=="OR1_1102" & Station == "GS4")|(Cruise=="OR1_1126" & Station == "GC2"))
ggplot(data=subset(out, !bad),
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat,
shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.3)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$sd <- round(out$se, 1)
kable(out)
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
dat <- subset(mac, Size<100)
dat <- subset(dat, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
dat.sum <- summaryBy(Size+Area+Longitude+Latitude+Depth~Habitat+Cruise+Station+Deployment+Tube, data=dat, FUN=c(sum, mean))
dat.sum$Biomass <- dat.sum$Size.sum/dat.sum$Area.mean
dat.mean <- summaryBy(Biomass+Longitude.mean+Latitude.mean+Depth.mean~Habitat+Cruise+Station, data=dat.sum, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean.mean", "Latitude.mean.mean", "Depth.mean.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
#scale_fill_manual(values=c("black","gray"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=subset(out, !bad),
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
#scale_fill_manual(values=c("black","gray"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], abun)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
dat$Density <- dat$Abundance/dat$Area
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth+Date~Habitat+Cruise+Station, data=dat, FUN=c(mean, sd, length))
dat.mean$Date.mean <- strftime(as.POSIXct(dat.mean$Date.mean, origin = "1970-01-01", tz = "Asia/Taipei"), format="%Y-%m-%d")
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Date.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "Date", "n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out)
# Outliers with very low abundance and only 1 replicate
bad <- with(out, (Cruise=="OR1_1102" & Station == "GS4")|(Cruise=="OR1_1126" & Station == "GC2"))
out <- subset(out, !bad)
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat,
shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.3)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$sd <- round(out$se, 1)
kable(out)
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
dat <- subset(mac, Size<100)
dat <- subset(dat, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
dat.sum <- summaryBy(Size+Area+Longitude+Latitude+Depth~Habitat+Cruise+Station+Deployment+Tube, data=dat, FUN=c(sum, mean))
dat.sum$Biomass <- dat.sum$Size.sum/dat.sum$Area.mean
dat.mean <- summaryBy(Biomass+Longitude.mean+Latitude.mean+Depth.mean~Habitat+Cruise+Station, data=dat.sum, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean.mean", "Latitude.mean.mean", "Depth.mean.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
out <- subset(out, !bad)
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
#scale_fill_manual(values=c("black","gray"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
dat.mean <- summaryBy(Biomass+Longitude+Latitude+Depth~Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], abun)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
dat$Density <- dat$Abundance/dat$Area
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth+Date~Habitat+Cruise+Station, data=dat, FUN=c(mean, sd, length))
dat.mean$Date.mean <- strftime(as.POSIXct(dat.mean$Date.mean, origin = "1970-01-01", tz = "Asia/Taipei"), format="%Y-%m-%d")
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Date.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "Date", "n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, caption="OR1_1102 GS4 and OR1_1126 GC2 had very low abundance and only single replication. They are removed as outliers before plotting")
# Outliers with very low abundance and only 1 replicate
bad <- with(out, (Cruise=="OR1_1102" & Station == "GS4")|(Cruise=="OR1_1126" & Station == "GC2"))
out <- subset(out, !bad)
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat,
shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.3)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(swtmap)
library(maptools)
library(knitr)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
head(mei)
summaryBy(Wt~Cruise+Station+Station+Deployment+Tube+Subcore, data=mei, FUN=lenth, keep.names=T)
summaryBy(Wt~Cruise+Station+Station+Deployment+Tube+Subcore, data=mei, FUN=length, keep.names=T)
summaryBy(Wt~Cruise+Station+Station+Deployment+Tube+Subcore, data=mei, FUN=length, var.names="Abundance")
summaryBy(Wt~Cruise+Station+Station+Deployment+Tube+Subcore, data=mei, FUN=length, var.names="Abundance", keep.names=TRUE)
abun <- summaryBy(Wt~Cruise+Station+Station+Deployment+Tube+Subcore, data=mei, FUN=length, var.names="Abundance", keep.names=TRUE)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
head(si)
abun <- summaryBy(Wt~Cruise+Station+Station+Deployment+Tube+Subcore, data=subset(si, Class="Meiofauna"), FUN=length, var.names="Abundance", keep.names=TRUE)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
col_types <- c("text", "text", "text", "numeric", "numeric", "text", "text", "text", "text", "text", "text",
"numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "text")
mac <- NULL
for(i in 1:15){
d <- read_excel("../excel/GPSC_macro_size_2020.01.08.xlsx", sheet=i, col_types=col_types)
mac <- rbind(mac, d)
}
mac <- as.data.frame(mac)
depth <- read_excel("../excel/GPSC_macro_sorting_2019.12.16.xlsx", sheet=1)
mac <- cbind(depth[match(paste(mac$Cruise, mac$Station), paste(depth$Cruise, depth$Station)),], mac)
mac$Wt <- mac$Size*(1.13)
depth.bk <- c(200, 400, 600, 800, 1100, 2000, 3700)
depth.lab <- c("200-400", "400-600", "600-800", "800-1100", "1100-2000", "2000-3700")
mac$Depth.zone <- cut(mac$Depth, breaks=depth.bk, labels=depth.lab)
# Split the size data by polychaetes, nematods, harpacticoids, peracarids and others
Category <- as.character(mac$Taxon)
Category[Category=="Amphipoda"|Category=="Cumacea"|Category=="Isopoda"|Category=="Tanaidacea"] <- "Peracarida"
Category[Category=="Oligochaeta"|Category=="Nemertea"|Category=="Sipuncula"|Category=="Aplacophora"|Category=="Ostracoda"] <- "Others"
mac <- cbind(Category, mac)
mac <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Size (complete specimen)
mac_s <- subset(mac, Condition=="C")
# Observed macrofauna sizes
ggplot(data=mac_s,
aes(x=log10(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_wrap(~Cruise, scales="free_y")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
# Observed polychaete sizes
ggplot(data=subset(mac_s, Category=="Polychaeta"),
aes(x=log10(Wt), fill=Habitat, colour=Habitat))+
geom_density(alpha=0.5)+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
