#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
factor(env4$variable)
levles(env3$variable)
levels(env3$variable)
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="Oxygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
levels(env4$variable)
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="Oxygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
factor(env4$variable)
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="Oxygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "O2", "Trans", "Clay", "Silt", "CN", "TOC", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable!="Salin"&variable!="Density"|variable!="Fluoro")
factor(env4$variable)
env4 <- subset(env3, variable!="Salin"&variable!="Density"&variable!="Fluoro")
factor(env4$variable)
env4 <- subset(env3, variable!="Salin"&variable!="Density"&variable!="Fluoro")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "O2", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(TWBathyMap)
library(doBy)
library(knitr)
library(maptools)
library(rgdal)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(bathy, e)
r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.1, 120.1, 120.5, 120.5, 120.1)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
loc <- env[,c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth")]
loc <- summaryBy(Longitude+Latitude+Depth~Habitat+Station, loc, keep.names = TRUE)
coordinates(loc) <- c("Longitude", "Latitude")
projection(loc) <- "+proj=longlat"
tbspplot <-
function(x, ...){
slope <- terrain(x, opt="slope")
aspect <- terrain(x, opt="aspect")
hill <- hillShade(slope, aspect, 80, 270)
p2 <- spplot(hill, col.regions=grey(0:100/100), cut=100, colorkey=FALSE)
pal <- tb.colors(x)
p1 <- spplot(x, col.regions=alpha(pal$col, 0.6), at=pal$breaks,
colorkey=list(space="top", labels=list(cex=1)),
scales=list(draw = TRUE, cex=0.9)
,...)
p1+as.layer(p2, under=T)
}
extra <- function(...){
panel.levelplot.raster(...)
sp.points(loc, cex=0.5, pch=19, col=rep(c("#f1a340", "#998ec3"), each=4))
sp.polygons(b, col="#f1a340", lty=2)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(119.7, 25), scale = 100/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(119.7, 25.2), "0")
sp.text(loc = c(120.7, 25.2), "100 km")
}
tbspplot(r, panel=extra)
tbspplot(r, panel=extra, main="(A)")
?xyplot
tbspplot(r, panel=extra, sub="(A)")
p1 <- tbspplot(r, panel=extra)
p1
library(swtmap)
e <- extent(120.15, 120.45, 22.1, 22.5)
r <- crop(bathy, e)
r <- projectRaster(r, res=0.0005, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=seq(-1200, 0, by=200))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#f1a340", "#998ec3"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
p2 <- tbspplot(r, panel=extra)
library(latticeExtra)
c(p1, p2)
c(p1, p2)
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
?grid.arrange
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=21, fill=rep(c("#f1a340", "#998ec3"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra, main="Elevation (m)")
tbspplot(r, panel=extra, main="  Elevation (m)")
tbspplot(r, panel=extra, main="    Elevation (m)")
tbspplot(r, panel=extra, main="       Elevation (m)")
tbspplot(r, panel=extra, main="        Elevation (m)")
?sp.pointLabel
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
library(viridis)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
no_strip <- theme(strip.background = element_rect(colour=NA, fill=NA),
strip.text = element_text(colour=NA))
no_legend <- theme(legend.position = "none")
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
bks <- l2b(c(mei_s$Wt, mac_s$Wt))
# Macrofauna
hab_mac <- splitBy(~Habitat, mac_s)
wt <- lapply(hab_mac, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab_mei <- splitBy(~Habitat, data=mei_s)
wt <- lapply(hab_mei, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
hab <- rbind(cbind(Class="Macro", ldply(hab_mac)[,c("Habitat", "Wt")]),
cbind(Class="Meio", ldply(hab_mei)[,c("Habitat", "Wt")]))
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
ggplot(data=hab,
aes(x=log10(Wt), fill=Class, size=Habitat, linetype=Habitat))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1.5,1))+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
#scale_fill_viridis(discrete = TRUE)+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Benthos", size="Habitat")+
#facet_wrap(~Class)+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=hab,
aes(x=log10(Wt), fill=Habitat, size=Class, linetype=Class))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1.5,1))+
scale_fill_manual(values=c("#f1a340", "#998ec3"))+
#scale_fill_viridis(discrete = TRUE)+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Benthos", size="Habitat")+
#facet_wrap(~Class)+
theme_bw() %+replace% large #%+replace% dark
(f2a <- ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Habitat, shape=Class))+
geom_point(size=5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
#scale_colour_manual(values=c("black", "gray"))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
#scale_colour_viridis(discrete = TRUE)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg)), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
)
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat, shape=Class))+
geom_point(size=5, lty=2)+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
#scale_colour_viridis(discrete = TRUE)+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
?geom_point
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat, shape=Class))+
geom_point(size=5, stroke=2)+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
#scale_colour_viridis(discrete = TRUE)+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
(f2a <- ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Habitat, shape=Class))+
geom_point(size=5, stroke=2)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
#scale_colour_manual(values=c("black", "gray"))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
#scale_colour_viridis(discrete = TRUE)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg)), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
)
(f2a <- ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Habitat, shape=Class))+
geom_point(size=5, stroke=1)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
#scale_colour_manual(values=c("black", "gray"))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
#scale_colour_viridis(discrete = TRUE)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg)), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
)
(f2a <- ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Habitat, shape=Class))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
#scale_colour_manual(values=c("black", "gray"))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
#scale_colour_viridis(discrete = TRUE)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg)), colour="Benthos")+
theme_bw() %+replace% large #%+replace% dark
)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
no_legend <- theme(legend.position = "none")
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
bks <- l2b(si$Wt)
# Macrofauna
hab_mac <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna"))
wt <- lapply(hab_mac, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab_mei <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna"))
wt <- lapply(hab_mei, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
hab <- rbind(cbind(Class="Macro", ldply(hab_mac)),
cbind(Class="Meio", ldply(hab_mei)))
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
ggplot(data=hab[,1:32],
aes(x=log10(Wt), size=paste(Class, Habitat, sep=","), fill=paste(Class, Habitat, sep=",")))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1,2,1,2))+
scale_fill_manual(values=c("#f1a340", "#f1a340", "#998ec3", "#998ec3"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Size class, habitat", size="Size class, habitat")+
#facet_wrap(~Habitat)+
theme_bw() %+replace% large #%+replace% dark
library(reshape2)
library(ggplot2)
library(viridis)
env2 <- env[, c("Habitat", "Cruise", "Station", "Depth", "Speed.mean", "over20", "Temperature", "Salinity", "Density", "Oxygen", "fluorometer", "transmissometer", "Clay", "Silt", "Sand", "CN",  "TOC", "TN", "Porosity")]
names(env2)[5:19] <- c("Speed", "Over20", "Temperature", "Salin", "Density", "Oxygen", "Fluoro", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Porosity")
se <- function(x)sd(x)/sqrt(length(x))
m <- summaryBy(Depth+Speed+Over20+Temperature+Salin+Density+Oxygen+Fluoro+Trans+Clay+Silt+Sand+CN+TOC+TN+Porosity~Habitat+Station, data=env2, FUN=mean, keep.names = TRUE)
s <-summaryBy(Depth+Speed+Over20+Temperature+Salin+Density+Oxygen+Fluoro+Trans+Clay+Silt+Sand+CN+TOC+TN+Porosity~Habitat+Station, data=env2, FUN=se, keep.names = TRUE)
m <- melt(m, , id.vars=c("Habitat", "Station", "Depth"), measure.vars=c("Speed", "Over20", "Temperature", "Salin", "Density", "Oxygen", "Fluoro", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Porosity"), value.name = "mean")
s <- melt(s, , id.vars=c("Habitat", "Station", "Depth"), measure.vars=c("Speed", "Over20", "Temperature", "Salin", "Density", "Oxygen", "Fluoro", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Porosity"), value.name = "se")
env3 <- cbind(m, se=s$se)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20),
axis.text.x = element_text(angle = 60),
strip.text= element_text(size=20))
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_manul(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manul(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
scale_colour_manual()
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=2)+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1.5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1.2)+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
?geom_errorbar
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1.2)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linewidth=1.2)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1.2)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linewidth=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.5)+
geom_path(size=1)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linewidth=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.2)+
geom_path(size=1)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linewidth=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable!="Salin"&variable!="Density"&variable!="Fluoro")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "O2", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5, stroke=1.2)+
geom_path(size=1)+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable!="Salin"&variable!="Density"&variable!="Fluoro")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "O2", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat, colour=Habitat))+
geom_point(size=5, stroke=1.2)+
geom_path(size=1)+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_colour_manual(values=c("#f1a340", "#998ec3"))+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
