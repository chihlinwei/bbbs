library(plyr)
library(doBy)
library(readxl)
library(reshape2)
library(vegan)
library(RColorBrewer)
library(metR)
library(knitr)
library(viridis)
library(ggdendro)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-
colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
bks <- l2b(c(mei_s$Wt, mac_s$Wt))
# Normalized enivronmental data to mean zero and unit variance
es <- as.data.frame(scale(env[, c(-1:-6, -11, -14)]))
f6a
mei_s$Class <- cut(mei_s$Wt, breaks=bks, labels=log10((bks[-28]+bks[-1])/2) %>% round(digits = 1))
mei_sc <- acast(mei_s, Cruise+Habitat+Station+Deployment+Tube+Subcore+Depth~Class, value.var = "Wt", fun.aggregate=sum)
fr <- strsplit(row.names(mei_sc), split="_") %>%ldply
fr <- cbind(paste(fr$V1, fr$V2, sep="_"), fr[,-1:-2])
names(fr) <- c("Cruise", "Habitat", "Station", "Deployment", "Tube", "Subcore", "Depth")
fr$Depth <- as.numeric(fr$Depth)
fr$Strata <- cut(fr$Depth, breaks=c(200, 400, 600, 800, 1100), labels=c("200-400", "400-600", "600-800", "800-1100"))
# Hierarchical Clustering based on square root transformed abundance data
# Agglomeration used group average (= UPGMA) method
d <- vegdist(mei_sc^0.25)
hc <- hclust(d, method="average")
labs <- strsplit(hc$labels, split="_") %>% ldply
hc$labels <- with(labs[,c(2,4)], paste(V2, V4, sep="_"))
# Convert dendrogram to ggplot style
dhc <- as.dendrogram(hc)
ghc    <- dendro_data(dhc, type="rectangle")
# Merge env data to dendrogram label data frame
ghc[["labels"]]   <- cbind(ghc[["labels"]], Habitat=labs$V3)
ggdendrogram(hc, rotate = FALSE)+
geom_point(data=label(ghc), aes(x, y, fill=Habitat), size=4, pch=21, colour=gray(0, 0.2))+
#scale_fill_viridis(discrete = TRUE)
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))
# nMDS
mei_md <- metaMDS(mei_sc^0.25, distance = "bray")
stress <- paste("Stress = ", deparse(round(mei_md$stress,2)))
# Weighted Averages Scores
mei_wa <- wascores(mei_md$points, mei_sc^0.25) %>% as.data.frame
mei_wa$label <- row.names(mei_wa) %>% as.numeric
(f6a <- ggplot(data=cbind(mei_md$points, fr), aes(x=MDS1, y=MDS2, fill=Habitat, colour=Habitat, shape))+
stat_ellipse(type="norm", geom="polygon", alpha=0.2)+
geom_point(alpha=0.8, size=5, colour=gray(0, 0.2), aes(shape=Strata))+
#geom_point(data=cbind(mei_md$points, fr) %>% subset(Cruise=="OR1_1114"), pch=21, size=2, fill="white", colour="black")+
#scale_color_viridis(discrete = TRUE)+
#scale_fill_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=21:24)+
annotate("text", x=-1.2, y=1.2, label=stress, size=5) +
geom_label_repel(data=mei_wa, aes(x=MDS1, y=MDS2, label=label), colour="black",
fill=gray(1, 0.6), size=4, label.padding = unit(0.2, "lines"), parse = TRUE)+
theme_bw() %+replace% large
)
# ordisurf:
mei_or <- ordisurf(mei_wa[,-3], mei_wa$label, plot = FALSE)
summary(mei_or)
mei_gr <- expand.grid(x = mei_or$grid$x, y = mei_or$grid$y) #get x and ys
mei_gr$z <- as.vector(mei_or$grid$z) #unravel the matrix for the z scores
mei_gr <- data.frame(na.omit(mei_gr)) #gets rid of the nas
# Predict ordisurf
newdata <- expand.grid(x1=seq(min(mei_md$points[,1]),  max(mei_md$points[,1]), len = 10), x2= seq(min(mei_md$points[,2]),  max(mei_md$points[,2]), len=10))
mei_gr2 <- cbind(newdata, z= predict(mei_or, newdata))
names(mei_gr2) <- c("x", "y", "z")
ggplot()+
#stat_ellipse(data=cbind(mei_md$points, fr), geom = "polygon", aes(x=MDS1, y=MDS2, fill=Habitat), alpha = 0.2, type="norm")+
stat_contour(data = mei_gr2, aes(x = x, y = y, z = z, colour=..level..), binwidth = 0.5)+
geom_text_contour(data = mei_gr2, aes(x = x, y = y, z = z), colour="#08306b")+
geom_point(data=cbind(mei_md$points, fr), aes(x=MDS1, y=MDS2, fill=Habitat, colour=Habitat), pch=21, alpha=0.8, size=5, colour=gray(0, 0.2))+
scale_color_viridis(discrete = FALSE)+
#scale_fill_viridis(discrete = TRUE)+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
labs(x="MDS1", y="MDS2", colour="Size")+
annotate("text", x=-1, y=0.5, label=stress, size=5)+
theme_bw() %+replace% large
keep <- match(with(fr, paste(Cruise, Station)), with(env, paste(Cruise, Station)))
db <- dbrda(mei_sc^0.25~Spd+over20+CN+transmissometer+TOC+Porosity+Clay+Silt+Salinity+Temperature, distance = "bray", data=es[keep,])
fit <- as.data.frame(db$CCA$biplot)
sc <- min(abs(c(range(db$CCA$u[,1]), range(db$CCA$u[,1]))))
fit <- fit*sc*1.8
fit <- cbind(fit, label=c("Spd", "Over20", "CN", "Trans", "TOC", "Por", "Clay", "Silt", "Salin", "Temp"))
ggplot(data=cbind(as.data.frame(db$CCA$u), env[keep,]), aes(x=dbRDA1, y=dbRDA2))+
geom_point(size=5, pch=21, colour=gray(0, 0.2), alpha=0.8, aes(fill=Habitat))+
#geom_point(data=cbind(as.data.frame(db$CCA$u), env[keep,]) %>% subset(Cruise=="OR1_1114"), pch=21, size=4, fill="white", colour="black")+
stat_ellipse(type="norm", geom = "polygon", alpha = 0.2, aes(colour=Habitat, fill=Habitat))+
geom_segment(data=fit, aes(x=0, y=0, xend=dbRDA1, yend=dbRDA2), size=1,
arrow = arrow(length = unit(0.2,"cm")), colour=viridis(3, 0.6)[2])+
geom_label_repel(data=fit, aes(x=dbRDA1, y=dbRDA2, label=label), fill=viridis(3, 0.6)[2], colour="white", size=4, fontface = "bold")+
#scale_color_viridis(discrete = TRUE)+
#scale_fill_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
theme_bw() %+replace% large
su <- summary(db)
cat("Constrained proportion = ", round(su$constr.chi/su$tot.chi*100, 1), "%", "\n",
"Unconstrained proportion = ", round(su$unconst.chi/su$tot.chi*100, 1), "%", "\n",
"dbRDA1 explains", round(su$cont$importance[2, 1]*100,1), "% of fit",
"and", round(su$cont$importance[2, 1]*100*su$constr.chi/su$tot.chi, 1), "% of total", "\n",
"dbRDA2 explains", round(su$cont$importance[2, 2]*100,1), "% of fit",
"and", round(su$cont$importance[2, 2]*100*su$constr.chi/su$tot.chi, 1), "% of total")
ordistep(db, permutations=999)
db <- dbrda(formula = mei_sc^0.25 ~ over20 + TOC + Porosity + Clay + Silt + Temperature, data = es[keep, ], distance = "bray")
fit <- as.data.frame(db$CCA$biplot)
sc <- min(abs(c(range(db$CCA$u[,1]), range(db$CCA$u[,1]))))
fit <- fit*sc*1.8
fit <- cbind(fit, label=c("Over20", "TOC", "Por", "Clay", "Silt", "Temp"))
ggplot(data=cbind(as.data.frame(db$CCA$u), env[keep,]), aes(x=dbRDA1, y=dbRDA2))+
geom_point(size=5, pch=21, colour=gray(0, 0.2), alpha=0.8, aes(fill=Habitat))+
#geom_point(data=cbind(as.data.frame(db$CCA$u), env[keep,]) %>% subset(Cruise=="OR1_1114"), pch=21, size=4, fill="white", colour="black")+
stat_ellipse(type="norm", geom = "polygon", alpha = 0.2, aes(colour=Habitat, fill=Habitat))+
geom_segment(data=fit, aes(x=0, y=0, xend=dbRDA1, yend=dbRDA2), size=1,
arrow = arrow(length = unit(0.2,"cm")), colour=viridis(3, 0.6)[2])+
geom_label_repel(data=fit, aes(x=dbRDA1, y=dbRDA2, label=label), fill=viridis(3, 0.6)[2], colour="white", size=4, fontface = "bold")+
#scale_color_viridis(discrete = TRUE)+
#scale_fill_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
theme_bw() %+replace% large
su <- summary(db)
cat("Constrained proportion = ", round(su$constr.chi/su$tot.chi*100, 1), "%", "\n",
"Unconstrained proportion = ", round(su$unconst.chi/su$tot.chi*100, 1), "%", "\n",
"dbRDA1 explains", round(su$cont$importance[2, 1]*100,1), "% of fit",
"and", round(su$cont$importance[2, 1]*100*su$constr.chi/su$tot.chi, 1), "% of total", "\n",
"dbRDA2 explains", round(su$cont$importance[2, 2]*100,1), "% of fit",
"and", round(su$cont$importance[2, 2]*100*su$constr.chi/su$tot.chi, 1), "% of total")
fit <- envfit(mei_md$points, es[keep, c("over20", "TOC", "Porosity", "Clay", "Silt", "Temperature")])
lab <- data.frame(fit$vectors$arrows*1.2)
lab$label <- c("Over20", "TOC", "Por", "Clay", "Silt", "Temp")
(f6b <- ggplot(data=cbind(mei_md$points, env[keep,]), aes(x=MDS1, y=MDS2))+
geom_point(aes(fill=Habitat, colour=Habitat, shape=Strata), alpha=0.8, size=5, colour=gray(0, 0.2))+
#geom_point(data=cbind(mei_md$points, enve) %>% subset(Cruise=="OR1_1114"), pch=21, size=2, fill="white", colour="black")+
stat_ellipse(type="norm", geom = "polygon", alpha = 0.2, aes(colour=Habitat, fill=Habitat))+
annotate("text", x=-1.2, y=1.2, label=stress, size=5)+
geom_segment(data=lab, aes(x=0, y=0, xend=MDS1, yend=MDS2), size=1, arrow = arrow(length = unit(0.2,"cm")), colour=viridis(3, 0.6)[2])+
geom_label_repel(data=lab, aes(label=label), fill=viridis(3, 0.6)[2],
colour="white", size=5, label.padding = unit(0.2, "lines"))+
#scale_fill_viridis(discrete = TRUE)+
#scale_color_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=21:24)+
theme_bw() %+replace% large
)
mei_sc2 <- acast(mei_s, Cruise+Habitat+Station+Depth~Class, value.var = "Wt", fun.aggregate=mean, na.rm=TRUE)
mei_sc2[is.na(mei_sc2)] <- 0
fr <- strsplit(row.names(mei_sc2), split="_") %>%ldply
fr <- cbind(paste(fr$V1, fr$V2, sep="_"), fr[,-1:-2])
names(fr) <- c("Cruise", "Habitat", "Station", "Depth")
fr$Depth <- as.numeric(fr$Depth)
# Main effect
f <- adonis(mei_sc2~Habitat+Cruise+Depth+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=fr, method="bray")
kable(f$aov.tab)
mac_s$Class <- cut(mac_s$Wt, breaks=bks, labels=log10((bks[-28]+bks[-1])/2) %>% round(digits = 1))
mac_sc <- acast(mac_s, Cruise+Habitat+Station+Deployment+Tube+Depth~Class, value.var = "Wt", fun.aggregate=sum)[-39,]
fr <- strsplit(row.names(mac_sc), split="_") %>%ldply
fr <- cbind(paste(fr$V1, fr$V2, sep="_"), fr[,-1:-2])
names(fr) <- c("Cruise", "Habitat", "Station", "Deployment", "Tube", "Depth")
fr$Depth <- as.numeric(fr$Depth)
fr$Strata <- cut(fr$Depth, breaks=c(200, 400, 600, 800, 1100), labels=c("200-400", "400-600", "600-800", "800-1100"))
# Hierarchical Clustering based on square root transformed abundance data
# Agglomeration used group average (= UPGMA) method
d <- vegdist(mac_sc^0.25)
hc <- hclust(d, method="average")
labs <- strsplit(hc$labels, split="_") %>% ldply
hc$labels <- with(labs[,c(2,4)], paste(V2, V4, sep="_"))
# Convert dendrogram to ggplot style
dhc <- as.dendrogram(hc)
ghc    <- dendro_data(dhc, type="rectangle")
# Merge env data to dendrogram label data frame
ghc[["labels"]]   <- cbind(ghc[["labels"]], Habitat=labs$V3)
ggdendrogram(hc, rotate = FALSE)+
geom_point(data=label(ghc), aes(x, y, fill=Habitat), size=4, pch=21, colour=gray(0, 0.2))+
#scale_fill_viridis(discrete = TRUE)
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))
# nMDS
mac_md <- metaMDS(mac_sc^0.25, distance = "bray")
stress <- paste("Stress = ", deparse(round(mac_md$stress,2)))
# Weighted Averages Scores
mac_wa <- wascores(mac_md$points, mac_sc^0.25) %>% as.data.frame
mac_wa$label <- row.names(mac_wa) %>% as.numeric
(f6c <- ggplot(data=cbind(mac_md$points, fr), aes(x=MDS1, y=MDS2, fill=Habitat, colour=Habitat))+
stat_ellipse(type="norm", geom="polygon", alpha=0.2)+
geom_point(alpha=0.8, size=5, colour=gray(0, 0.2), aes(shape=Strata))+
#scale_color_viridis(discrete = TRUE)+
#scale_fill_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=21:24)+
annotate("text", x=-1.2, y=1.2, label=stress, size=5) +
geom_label_repel(data=mac_wa, aes(x=MDS1, y=MDS2, label=label), colour="black",
fill=gray(1, 0.6), size=4, label.padding = unit(0.2, "lines"), parse = TRUE)+
theme_bw() %+replace% large
)
# ordisurf:
mac_or <- ordisurf(mac_wa[,-3], mac_wa$labe, plot=FALSE)
summary(mac_or)
mac_gr <- expand.grid(x = mac_or$grid$x, y = mac_or$grid$y) #get x and ys
mac_gr$z <- as.vector(mac_or$grid$z) #unravel the matrix for the z scores
mac_gr <- data.frame(na.omit(mac_gr)) #gets rid of the nas
# Predict ordisurf
newdata <- expand.grid(x1=seq(min(mac_md$points[,1]),  max(mac_md$points[,1]), len = 10), x2= seq(min(mac_md$points[,2]),  max(mac_md$points[,2]), len=10))
mac_gr2 <- cbind(newdata, z= predict(mac_or, newdata))
names(mac_gr2) <- c("x", "y", "z")
ggplot()+
#stat_ellipse(data=cbind(mac_md$points, fr), geom = "polygon", aes(x=MDS1, y=MDS2, fill=Habitat), alpha = 0.2, type="norm")+
stat_contour(data = mac_gr, aes(x = x, y = y, z = z, colour=..level..))+
#geom_text_contour(data = mac_gr, aes(x = x, y = y, z = z), colour="#08306b")+
geom_point(data=cbind(mac_md$points, fr), aes(x=MDS1, y=MDS2, fill=Habitat, colour=Habitat), pch=21, alpha=0.8, size=5, colour=gray(0, 0.2))+
scale_color_viridis(discrete = FALSE)+
#scale_fill_viridis(discrete = TRUE)+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
labs(x="MDS1", y="MDS2", colour="Size")+
annotate("text", x=-1, y=1.2, label=stress, size=5) +
theme_bw() %+replace% large
keep <- match(with(fr, paste(Cruise, Station)), with(env, paste(Cruise, Station)))
db <- dbrda(mac_sc^0.25~Spd+over20+CN+transmissometer+TOC+Porosity+Clay+Silt+Salinity+Temperature, distance = "bray", data=es[keep,])
fit <- as.data.frame(db$CCA$biplot)
sc <- min(abs(c(range(db$CCA$u[,1]), range(db$CCA$u[,1]))))
fit <- fit*sc*1.8
fit <- cbind(fit, label=c("Spd", "Over20", "CN", "Trans", "TOC", "Por", "Clay", "Silt", "Salin", "Temp"))
ggplot(data=cbind(as.data.frame(db$CCA$u), env[keep,]), aes(x=dbRDA1, y=dbRDA2))+
geom_point(size=5, pch=21, colour=gray(0, 0.2), alpha=0.8, aes(fill=Habitat))+
#geom_point(data=cbind(as.data.frame(db$CCA$u), env[keep,]) %>% subset(Cruise=="OR1_1114"), pch=21, size=4, fill="white", colour="black")+
stat_ellipse(type="norm", geom = "polygon", alpha = 0.2, aes(colour=Habitat, fill=Habitat))+
geom_segment(data=fit, aes(x=0, y=0, xend=dbRDA1, yend=dbRDA2), size=1,
arrow = arrow(length = unit(0.2,"cm")), colour=viridis(3, 0.6)[2])+
geom_label_repel(data=fit, aes(x=dbRDA1, y=dbRDA2, label=label), fill=viridis(3, 0.6)[2], colour="white", size=4, fontface = "bold")+
#scale_color_viridis(discrete = TRUE)+
#scale_fill_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
theme_bw() %+replace% large
su <- summary(db)
cat("Constrained proportion = ", round(su$constr.chi/su$tot.chi*100, 1), "%", "\n",
"Unconstrained proportion = ", round(su$unconst.chi/su$tot.chi*100, 1), "%", "\n",
"dbRDA1 explains", round(su$cont$importance[2, 1]*100,1), "% of fit",
"and", round(su$cont$importance[2, 1]*100*su$constr.chi/su$tot.chi, 1), "% of total", "\n",
"dbRDA2 explains", round(su$cont$importance[2, 2]*100,1), "% of fit",
"and", round(su$cont$importance[2, 2]*100*su$constr.chi/su$tot.chi, 1), "% of total")
ordistep(db, permutations=999)
db <- dbrda(formula = mac_sc^0.25 ~ Spd + over20 + CN + transmissometer + Porosity + Silt + Temperature, data = es[keep, ], distance = "bray")
fit <- as.data.frame(db$CCA$biplot)
sc <- min(abs(c(range(db$CCA$u[,1]), range(db$CCA$u[,1]))))
fit <- fit*sc*1.8
fit <- cbind(fit, label=c("Spd", "Over20", "CN", "Trans", "Por", "Silt", "Temp"))
ggplot(data=cbind(as.data.frame(db$CCA$u), env[keep,]), aes(x=dbRDA1, y=dbRDA2))+
geom_point(size=5, pch=21, colour=gray(0, 0.2), alpha=0.8, aes(fill=Habitat))+
#geom_point(data=cbind(as.data.frame(db$CCA$u), env[keep,]) %>% subset(Cruise=="OR1_1114"), pch=21, size=4, fill="white", colour="black")+
stat_ellipse(type="norm", geom = "polygon", alpha = 0.2, aes(colour=Habitat, fill=Habitat))+
geom_segment(data=fit, aes(x=0, y=0, xend=dbRDA1, yend=dbRDA2), size=1,
arrow = arrow(length = unit(0.2,"cm")), colour=viridis(3, 0.6)[2])+
geom_label_repel(data=fit, aes(x=dbRDA1, y=dbRDA2, label=label), fill=viridis(3, 0.6)[2], colour="white", size=4, fontface = "bold")+
#scale_color_viridis(discrete = TRUE)+
#scale_fill_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
theme_bw() %+replace% large
su <- summary(db)
cat("Constrained proportion = ", round(su$constr.chi/su$tot.chi*100, 1), "%", "\n",
"Unconstrained proportion = ", round(su$unconst.chi/su$tot.chi*100, 1), "%", "\n",
"dbRDA1 explains", round(su$cont$importance[2, 1]*100,1), "% of fit",
"and", round(su$cont$importance[2, 1]*100*su$constr.chi/su$tot.chi, 1), "% of total", "\n",
"dbRDA2 explains", round(su$cont$importance[2, 2]*100,1), "% of fit",
"and", round(su$cont$importance[2, 2]*100*su$constr.chi/su$tot.chi, 1), "% of total")
fit <- envfit(mac_md$points, es[keep, c("Spd", "over20", "CN", "transmissometer", "Porosity", "Silt", "Temperature")])
lab <- data.frame(fit$vectors$arrows*1.2)
lab$label <- c("Spd", "Over20", "CN", "Trans", "Por", "Silt", "Temp")
(f6d <- ggplot(data=cbind(mac_md$points, env[keep,]), aes(x=MDS1, y=MDS2))+
geom_point(aes(fill=Habitat, colour=Habitat, shape=Strata), alpha=0.8, size=5, colour=gray(0, 0.2))+
#geom_point(data=cbind(mei_md$points, enve) %>% subset(Cruise=="OR1_1114"), pch=21, size=2, fill="white", colour="black")+
stat_ellipse(type="norm", geom = "polygon", alpha = 0.2, aes(colour=Habitat, fill=Habitat))+
annotate("text", x=-1.2, y=1.2, label=stress, size=5)+
geom_segment(data=lab, aes(x=0, y=0, xend=MDS1, yend=MDS2), size=1, arrow = arrow(length = unit(0.2,"cm")), colour=viridis(3, 0.6)[2])+
geom_label_repel(data=lab, aes(label=label), fill=viridis(3, 0.6)[2],
colour="white", size=5, label.padding = unit(0.2, "lines"))+
#scale_fill_viridis(discrete = TRUE)+
#scale_color_viridis(discrete = TRUE)+
scale_color_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=21:24)+
theme_bw() %+replace% large
)
mac_sc2 <- acast(mac_s, Cruise+Habitat+Station+Depth~Class, value.var = "Wt", fun.aggregate=mean, na.rm=TRUE)
mac_sc2[is.na(mac_sc2)] <- 0
fr <- strsplit(row.names(mac_sc2), split="_") %>%ldply
fr <- cbind(paste(fr$V1, fr$V2, sep="_"), fr[,-1:-2])
names(fr) <- c("Cruise", "Habitat", "Station", "Depth")
fr$Depth <- as.numeric(fr$Depth)
# Main effect
f <- adonis(mac_sc2~Habitat+Cruise+Depth+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=fr, method="bray")
kable(f$aov.tab)
library(patchwork)
p1 <- f6a+labs(title="(A)")+no_legend
no_legend <- theme(legend.position = "none")
library(patchwork)
p1 <- f6a+labs(title="(A)")+no_legend
p2 <- f6b+labs(title="(B)")
p3 <- f6c+labs(title="(C)")+no_legend
p4 <- f6d+labs(title="(D)")+no_legend
(p1+p2)/(p3+p4)
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(TWBathyMap)
library(doBy)
library(knitr)
library(maptools)
library(rgdal)
e <- extent(119.1, 122.2, 21.6, 25.5)
r <- crop(bathy, e)
r <- projectRaster(r, res=0.001, crs="+proj=longlat")
lon <- c(120.1, 120.1, 120.5, 120.5, 120.1)
lat <- c(22.1, 22.5, 22.5, 22.1, 22.1)
b <- SpatialPolygons(list(Polygons(list(Polygon(cbind(lon, lat))), 1)))
loc <- env[,c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth")]
loc <- summaryBy(Longitude+Latitude+Depth~Habitat+Station, loc, keep.names = TRUE)
coordinates(loc) <- c("Longitude", "Latitude")
projection(loc) <- "+proj=longlat"
tbspplot <-
function(x, ...){
slope <- terrain(x, opt="slope")
aspect <- terrain(x, opt="aspect")
hill <- hillShade(slope, aspect, 80, 270)
p2 <- spplot(hill, col.regions=grey(0:100/100), cut=100, colorkey=FALSE)
pal <- tb.colors(x)
p1 <- spplot(x, col.regions=alpha(pal$col, 0.6), at=pal$breaks,
colorkey=list(space="top", labels=list(cex=1)),
scales=list(draw = TRUE, cex=0.9)
,...)
p1+as.layer(p2, under=T)
}
extra <- function(...){
panel.levelplot.raster(...)
sp.points(loc, cex=0.5, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.polygons(b, col="#e41a1c", lty=2)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(119.7, 25), scale = 100/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(119.7, 25.2), "0")
sp.text(loc = c(120.7, 25.2), "100 km")
}
tbspplot(r, panel=extra)
library(swtmap)
e <- extent(120.15, 120.45, 22.1, 22.5)
r <- crop(bathy, e)
r <- projectRaster(r, res=0.0005, crs="+proj=longlat")
isobath<- rasterToContour(r, levels=seq(-1200, 0, by=200))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(isobath, col="gray30")
sp.points(loc, cex=2, pch=19, col=rep(c("#e41a1c", "#4daf4a"), each=4))
sp.pointLabel(loc, labels=loc$Station, allowSmallOverlap=FALSE)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.28, 22.46), scale = 10/(111.321*cos(22.46*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.28, 22.475), "0")
sp.text(loc = c(120.38, 22.475), "10 km")
}
tbspplot(r, panel=extra)
library(reshape2)
library(ggplot2)
library(viridis)
env2 <- env[, c("Habitat", "Cruise", "Station", "Depth", "Speed.mean", "over20", "Temperature", "Salinity", "Density", "Oxygen", "fluorometer", "transmissometer", "Clay", "Silt", "Sand", "CN",  "TOC", "TN", "Porosity")]
names(env2)[5:19] <- c("Speed", "Over20", "Temperature", "Salin", "Density", "Oxygen", "Fluoro", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Porosity")
se <- function(x)sd(x)/sqrt(length(x))
m <- summaryBy(Depth+Speed+Over20+Temperature+Salin+Density+Oxygen+Fluoro+Trans+Clay+Silt+Sand+CN+TOC+TN+Porosity~Habitat+Station, data=env2, FUN=mean, keep.names = TRUE)
s <-summaryBy(Depth+Speed+Over20+Temperature+Salin+Density+Oxygen+Fluoro+Trans+Clay+Silt+Sand+CN+TOC+TN+Porosity~Habitat+Station, data=env2, FUN=se, keep.names = TRUE)
m <- melt(m, , id.vars=c("Habitat", "Station", "Depth"), measure.vars=c("Speed", "Over20", "Temperature", "Salin", "Density", "Oxygen", "Fluoro", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Porosity"), value.name = "mean")
s <- melt(s, , id.vars=c("Habitat", "Station", "Depth"), measure.vars=c("Speed", "Over20", "Temperature", "Salin", "Density", "Oxygen", "Fluoro", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Porosity"), value.name = "se")
env3 <- cbind(m, se=s$se)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20),
axis.text.x = element_text(angle = 60),
strip.text= element_text(size=20))
ggplot(data=env3, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
head(env3)
ggplot(data=subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"),
aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
ggplot(data=subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN"),
aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
factor(env4$variable)
factor(env4$variable, labels=c("Spd", "Over20", "Temp", "Trans", "Clay", "Silt", "CN", "Por"))
factor(env4$variable, labels=c("Spd", "Over20", "Temp", "Trans", "Clay", "Silt", "CN", "TOC", "Por"))
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "Trans", "Clay", "Silt", "CN", "TOC", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "Trans", "Clay", "Silt", "CN", "TOC", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "Trans", "Clay", "Silt", "CN", "TOC", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="0xygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
factor(env4$variable)
levles(env3$variable)
levels(env3$variable)
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="Oxygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
levels(env4$variable)
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="Oxygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
factor(env4$variable)
env4 <- subset(env3, variable=="Speed"|variable=="Over20"|variable=="Trans"|variable=="TOC"|variable=="Temperature"|variable=="Oxygen"|variable=="Silt"|variable=="Clay"|variable=="Porosity"|variable=="CN")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "O2", "Trans", "Clay", "Silt", "CN", "TOC", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
env4 <- subset(env3, variable!="Salin"&variable!="Density"|variable!="Fluoro")
factor(env4$variable)
env4 <- subset(env3, variable!="Salin"&variable!="Density"&variable!="Fluoro")
factor(env4$variable)
env4 <- subset(env3, variable!="Salin"&variable!="Density"&variable!="Fluoro")
env4$variable <- factor(env4$variable, labels=c("Spd", "Over20", "Temp", "O2", "Trans", "Clay", "Silt", "Sand", "CN", "TOC", "TN", "Por"))
ggplot(data=env4, aes(x=Depth, y=mean, ymin=mean-se, ymax=mean+se, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_path()+
scale_shape_manual(values=c(19,1))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_linetype_manual(values=c(1,2))+
scale_color_viridis(discrete = TRUE)+
labs(x="Depth (m)", y="")+
facet_wrap(~variable, scales="free_y", ncol=3)+
theme_bw()%+replace% large
