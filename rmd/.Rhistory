unique(dat.sum$Taxon)
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon+Family, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Abundance")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon++Family, data=pols, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon, Family)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon, Family)))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon+Family, data=dat, FUN=c(sum, length))
head(dat.sum)
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon+Family, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-7] <- c("Wt", "Abundance")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon++Family, data=pols, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon, Family)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon, Family)))
dat.sum$Abundance[keep] <- pola$Abundance
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon++Family, data=ophs, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon, Family)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon, Family)))
dat.sum$Abundance[keep] <- opha$Abundance
dat.sum
?duplicated
with(dat.sum, paste(Taxon, Family))
duplicated(with(dat.sum, paste(Taxon, Family)))
keep <- !duplicated(with(dat.sum, paste(Taxon, Family)))
dat.sum[keep,]
dim(dat.sum[keep,])
out <- dat.sum[keep, 6:7]
out
with(out, order(Taxon, family))
out
order(out$Taxon, out$Family)
out[order(out$Taxon, out$Family),]
out[order(out$Taxon, out$Family),]
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-7] <- c("Wt", "Abundance")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon+, data=pols, FUN=length, var.names="Abundance", keep.names = T)
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-7] <- c("Wt", "Abundance")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Abundance[keep] <- pola$Abundance
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Abundance")
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Abundance[keep] <- pola$Abundance
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Abundance", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Abundance[keep] <- opha$Abundance
keep <- !duplicated(with(dat.sum, paste(Taxon)))
head(dat.sum)
dat.sum[keep, 6]
head(BenthProdExampleData)
?BenthProdExampleData
out <- cbind(Taxon=dat.sum$Taxon[keep], ConFac_j2mgwm=NA, Mollusca=NA, Annelida=NA, Crustacea=NA, Echinodermata=NA, Insecta=NA, Infauna=NA, Sessile=NA, Crawler=NA, FacultativeSwimmer=NA, Herbivore=NA, Omnivore=NA, Carnivore=NA, Lake=NA, River=NA, Marine=NA, Subtidal=NA, Exploited=NA)
out
unique(mac$Taxon)
unique(mei$Taxon)
unique(c(mei$Taxon, mac$Taxon))
out <- cbind(Taxon=unique(c(mei$Taxon, mac$Taxon)), ConFac_j2mgwm=NA, Mollusca=NA, Annelida=NA, Crustacea=NA, Echinodermata=NA, Insecta=NA, Infauna=NA, Sessile=NA, Crawler=NA, FacultativeSwimmer=NA, Herbivore=NA, Omnivore=NA, Carnivore=NA, Lake=NA, River=NA, Marine=NA, Subtidal=NA, Exploited=NA)
out
write.csv(out, na="", file="../excel/trait.csv")
write.csv(out, na="", row.names=FALSE, file="../excel/trait.csv")
write.csv(BenthProdExampleData, na="", row.names=FALSE, file="../excel/BenthProdExampleData.csv")
head(mei)
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], Abundance=abun$Abundance)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|(Cruise=="OR1_1132" & Station == "GS1"))
# Remove outlier samples with only 1 individuals
bad <- with(dat, Abundance <=1 | (Cruise=="OR1_1102" & Station == "GS4") )
dat <- subset(dat, !bad)
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
sort$Taxon
unique(sort$Taxon)
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Remove Cyclopoida and Calanoida
subset(sort, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], Abundance=abun$Abundance)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|(Cruise=="OR1_1132" & Station == "GS1"))
# Remove outlier samples with only 1 individuals
bad <- with(dat, Abundance <=1 | (Cruise=="OR1_1102" & Station == "GS4") )
dat <- subset(dat, !bad)
dat$Density <- dat$Abundance/dat$Area
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth+Date~Habitat+Cruise+Station, data=dat, FUN=c(mean, sd, length))
dat.mean$Date.mean <- strftime(as.POSIXct(dat.mean$Date.mean, origin = "1970-01-01", tz = "Asia/Taipei"), format="%Y-%m-%d")
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Date.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "Date", "n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c", caption="OR1_1102 GS4, OR1_1126 GC2, and OR1_1126 GC3 Tube 2 had very low abundance and only single replication. They are removed as outliers before plotting")
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat,
shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.3)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
dat.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
out <- dat.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Density <- round(out$Density, 0)
out$sd <- round(out$sd, 1)
out$sd <- round(out$se, 1)
kable(out, align="c")
ggplot(data=out,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
dat <- mac
dat <- subset(dat, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
# Remove outlier samples with only 1 individuals
bad <- with(dat, (Cruise=="OR1_1102" & Station == "GC1" & Deployment == 2 & Tube ==1)|
(Cruise=="OR1_1102" & Station == "GS4" & Deployment == 1 & Tube ==1)|
(Cruise=="OR1_1102" & Station == "GC4" & Deployment == 1 & Tube ==12)|
(Cruise=="OR1_1126" & Station == "GC1" & Deployment == 1 & Tube ==8) |
(Cruise=="OR1_1126" & Station == "GC2" & Deployment == 1 & Tube ==4)|
(Cruise=="OR1_1126" & Station == "GC3" & Deployment == 1 & Tube ==2)|
(Cruise=="OR1_1128" & Station == "GC1" & Deployment == 1 & Tube == 2 & L == 11.81) # This single spcimen affect the total biomass too much
)
dat <- subset(dat, !bad)
unique(dat$Taxon)
dat <- mac
dat <- subset(dat, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
# Remove outlier samples with only 1 individuals
bad <- with(dat, (Cruise=="OR1_1102" & Station == "GC1" & Deployment == 2 & Tube ==1)|
(Cruise=="OR1_1102" & Station == "GS4" & Deployment == 1 & Tube ==1)|
(Cruise=="OR1_1102" & Station == "GC4" & Deployment == 1 & Tube ==12)|
(Cruise=="OR1_1126" & Station == "GC1" & Deployment == 1 & Tube ==8) |
(Cruise=="OR1_1126" & Station == "GC2" & Deployment == 1 & Tube ==4)|
(Cruise=="OR1_1126" & Station == "GC3" & Deployment == 1 & Tube ==2)|
(Cruise=="OR1_1128" & Station == "GC1" & Deployment == 1 & Tube == 2 & L == 11.81) # This single spcimen affect the total biomass too much
)
dat <- subset(dat, !bad)
dat.sum <- summaryBy(Size+Area+Longitude+Latitude+Depth~Habitat+Cruise+Station+Deployment+Tube, data=dat, FUN=c(sum, mean))
dat.sum$Biomass <- dat.sum$Size.sum/dat.sum$Area.mean
dat.mean <- summaryBy(Biomass+Longitude.mean+Latitude.mean+Depth.mean~Habitat+Cruise+Station, data=dat.sum, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Cruise", "Station", "Longitude.mean.mean", "Latitude.mean.mean", "Depth.mean.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Cruise", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c", caption="OR1_1102 GS4 and OR1_1126 GC2 had very low abundance and only single replication. They are removed as outliers before plotting")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
#scale_fill_manual(values=c("black","gray"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large #%+replace% dark
?si
si
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(swtmap)
library(maptools)
library(knitr)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
dat.mean$Longitude <- round(dat.mean$Longitude, 4)
dat.mean$Latitude <- round(dat.mean$Latitude, 4)
dat.mean$Depth <- round(dat.mean$Depth, 0)
dat.mean$Density <- round(dat.mean$Density, 0)
dat.mean$sd <- round(dat.mean$sd, 1)
dat.mean$se <- round(dat.mean$se, 1)
kable(dat.mean, align="c")
dat.mean.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=dat.mean, FUN=c(mean, sd, length))
dat.mean.mean$Density.se <- dat.mean.mean$Density.sd/dat.mean.mean$Density.length^0.5
dat.mean.mean <- dat.mean.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(dat.mean.mean) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
ggplot(data=dat.mean.mean,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
dat.mean.mean$Longitude <- round(dat.mean.mean$Longitude, 4)
dat.mean.mean$Latitude <- round(dat.mean.mean$Latitude, 4)
dat.mean.mean$Depth <- round(dat.mean.mean$Depth, 0)
dat.mean.mean$Density <- round(dat.mean.mean$Density, 0)
dat.mean.mean$sd <- round(dat.mean.mean$sd, 1)
dat.mean.mean$sd <- round(dat.mean.mean$se, 1)
kable(dat.mean.mean)
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei_s, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
dat.mean <- summaryBy(Biomass+Longitude+Latitude+Depth~Region+Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# log2 bin
l2b <- function(x) 2^( floor(log2(min(x))) : ceiling(log2(max(x))) )
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
#source("PLBfunctions.r")
bks <- l2b(c(mei_s$Wt, mac_s$Wt))
# Macrofauna
hab_mac <- splitBy(~Habitat, mac_s)
wt <- lapply(hab_mac, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab_mei <- splitBy(~Habitat, data=mei_s)
wt <- lapply(hab_mei, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
hab <- rbind(cbind(Class="Macro", ldply(hab_mac)[,c("Habitat", "Wt")]),
cbind(Class="Meio", ldply(hab_mei)[,c("Habitat", "Wt")]))
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
ggplot(data=hab,
aes(x=log10(Wt), fill=paste(Class, Habitat, sep=","), size=paste(Class, Habitat, sep=",")))+
geom_density(alpha=0.5)+
scale_size_manual(values=c(1,2,1,2))+
scale_fill_manual(values=c("#e41a1c", "#e41a1c", "#4daf4a", "#4daf4a"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)), fill="Size class, habitat", size="Size class, habitat")+
#facet_wrap(~Habitat)+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Class, shape=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Macrofauna > 1e-02
hab <- splitBy(~Habitat, data=subset(mac_s, Wt> 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1e-03
hab <- splitBy(~Habitat, data=subset(mei_s, Wt> 1e-03))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
nbss <- rbind(cbind(Class="Macro", nbss_mac),
cbind(Class="Meio", nbss_mei))
plb <- rbind(cbind(Class="Macro", plb_mac),
cbind(Class="Meio", plb_mei))
SortWt <- rbind(cbind(Class="Macro", SortWt_mac),
cbind(Class="Meio", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=5)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Class, shape=Habitat))+
geom_point(size=2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_x_log10(expression(Individual~weight~(mg)), labels = function(x) format(x, scientific = T))+
scale_y_log10("Individual rank", limits=c(1, NA), labels = function(x) format(x, scientific = T))+
theme_bw() %+replace% large #%+replace% dark
bks
cut(mei_s$Wt, break=bks)
?cut
cut(mei_s$Wt, breaks=bks)
namens(mei_s)
names(mei_s)
bks
bks
mei_s$Class <- cut(mei_s$Wt, breaks=bks, labels=1:28)
mei_s$Class <- cut(mei_s$Wt, breaks=bks, labels=1:29)
length(bks)
mei_s$Class <- cut(mei_s$Wt, breaks=bks, labels=1:28)
mei_s$Class <- cut(mei_s$Wt, breaks=bks)
mac_s$Class <- cut(mac_s$Wt, breaks=bks)
head(mei_s)
library(reshape2)
?acast
acast(mei_s, Cruise+Habitat+Station+Deployment+Tube+Subcore~Class, value.var = "Wt")
acast(mei_s, Cruise+Habitat+Station+Deployment+Tube+Subcore~Class, value.var = "Wt", fun.aggregate=sum)
