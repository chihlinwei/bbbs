aes(x = Station, y = DO_flux.mean, ymin=DO_flux.mean-DO_flux.sd, ymax=DO_flux.mean, colour=Habitat, fill=Habitat))+
geom_bar(stat = "identity")+
geom_errorbar()+
ylab(expression(Oyxgen~flux~(mmol~m^-2~day^-1)))+
scale_y_reverse()+
#labs(title="Sediment Community Carbon Remineralization Rate")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) %+replace% dark
p2 <- ggplot(station_mean,
aes(x = Station, y = C_flux.mean, ymax=C_flux.mean+C_flux.sd, ymin=C_flux.mean, colour=Habitat, fill=Habitat))+
geom_bar(stat = "identity")+
geom_errorbar()+
ylab(expression(Carbon~flux~(mg~C~m^-2~day^-1)))+
#labs(title="Sediment Community Carbon Remineralization Rate")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) %+replace% dark
plot_grid(p1, p2, ncol=1, align = "h", axis="b")
# CTD data
ctd <- as.data.frame(read_excel("../GPSC_data/GPSC_CTD/GPSC_CTD_2020.07.23.xlsx", sheet=1))
ctd <- splitBy(~Cruise+Station, ctd)
# Function to get average of bottom 3 deepest CTD data
deep_fun <- function(x) {
dat <- x[order(x$pressure, decreasing=TRUE)[1:3],]
summaryBy(.~Cruise+Station, data=dat, keep.names=TRUE, na.rm=TRUE)
}
ctd <- lapply(ctd, FUN=deep_fun)
ctd <- ldply(ctd)[, -1]
ctd$transmissometer[ctd$transmissometer<=0] <- 0 # Set negtive transmissometer to zero
# Average temperature, sigma_theta and density
ctd$Temperature <- rowMeans(ctd[, c("temperature_T1", "temperature_T2")], na.rm=TRUE)
ctd$Salinity <- rowMeans(ctd[, c("salinity_T1C1", "salinity_T2C2")], na.rm=TRUE)
ctd$Sigma_theta <- rowMeans(ctd[, c("density_T1C1...11", "density_T2C2...12")], na.rm=TRUE)
ctd$Density <- rowMeans(ctd[, c("density_T1C1...13", "density_T2C2...14")], na.rm=TRUE)
id1 <- with(ctd, paste(Cruise, Station))
id2 <- with(do_fx, paste(Cruise, Station))
# Fill station with no CTD data
id2[id2=="OR1_1190 FC2A"] <- "OR1_1190 FC2"
id2[id2=="OR1_1190 GS6"] <- "OR1_1138 GS6"
ctd <- ctd[match(id2, id1), ]
head(ctd)
# Sediment data
col_types <- c(rep("text", 2), "numeric", "text", rep("numeric", 9))
sed <- as.data.frame(read_excel("../GPSC_data/GPSC_sediment/GPSC_sediment_2019.5.11.xlsx", sheet=1, col_types=col_types))
sed <- as.data.frame(read_excel("../GPSC_data/GPSC_sediment/GPSC_sediment_2020.08.21.xlsx", sheet=1, col_types=col_types))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(swtmap)
library(maptools)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- subset(abun, Cruise!="OR1_1128" & Cruise!="OR1_1132")
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
#dat.mean$Longitude <- round(dat.mean$Longitude, 4)
#dat.mean$Latitude <- round(dat.mean$Latitude, 4)
#dat.mean$Depth <- round(dat.mean$Depth, 0)
#dat.mean$Density <- round(dat.mean$Density, 0)
#dat.mean$sd <- round(dat.mean$sd, 1)
#dat.mean$se <- round(dat.mean$se, 1)
kable(dat.mean, align="c")
splitBy(~Habitat, dat.mean) %>% lapply(FUN=function(x)lm(log10(Density)~Depth, data=x) %>% summary)
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
splitBy(~Habitat, dat.mean) %>% lapply(FUN=function(x)lm(log10(Density)~Depth, data=x) %>% summary)
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large %+replace% dark
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(swtmap)
library(maptools)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- subset(abun, Cruise!="OR1_1128" & Cruise!="OR1_1132")
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
#dat.mean$Longitude <- round(dat.mean$Longitude, 4)
#dat.mean$Latitude <- round(dat.mean$Latitude, 4)
#dat.mean$Depth <- round(dat.mean$Depth, 0)
#dat.mean$Density <- round(dat.mean$Density, 0)
#dat.mean$sd <- round(dat.mean$sd, 1)
#dat.mean$se <- round(dat.mean$se, 1)
kable(dat.mean, align="c")
splitBy(~Habitat, dat.mean) %>% lapply(FUN=function(x)lm(log10(Density)~Depth, data=x) %>% summary)
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
f <- gls(log10(Density) ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=dat.mean, method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# Function to plot dianotics plot
dianostic_plot <-
function(f, y){
# standardized residuals versus fitted values
a1 <- plot(f, resid(., type = "p") ~ fitted(.) | Habitat, abline = 0)
a2 <- plot(f, resid(., type = "p") ~ fitted(.) | Cruise, abline = 0)
a3 <- plot(f, resid(., type = "p") ~ fitted(.), abline = 0)
# box-plots of residuals
b1<-plot(f, Habitat ~ resid(.))
b2 <- plot(f, Cruise ~ resid(.))
# observed versus fitted values
c1<-plot(f, paste(paste(y, "fitted(.)", sep="~"), "Habitat", sep="|") %>% formula, abline = c(0,1))
c2<-plot(f, paste(paste(y, "fitted(.)", sep="~"), "Cruise", sep="|") %>% formula, abline = c(0,1))
c3<-plot(f, paste(y, "fitted(.)", sep="~") %>% formula, abline = c(0,1))
# QQ plot
d1<-qqnorm(f, ~ resid(., type = "p") | Habitat, abline = c(0,1))
d2<-qqnorm(f, ~ resid(., type = "p") | Cruise, abline = c(0,1))
d3<-qqnorm(f, ~ resid(., type = "p"), abline = c(0,1))
print(a1, split=c(1,1,3,4), more=TRUE)
print(a2, split=c(2,1,3,4), more=TRUE)
print(a3, split=c(3,1,3,4), more=TRUE)
print(b1, split=c(1,2,3,4), more=TRUE)
print(b2, split=c(2,2,3,4), more=TRUE)
#
print(c1, split=c(1,3,3,4), more=TRUE)
print(c2, split=c(2,3,3,4), more=TRUE)
print(c3, split=c(3,3,3,4), more=TRUE)
print(d1, split=c(1,4,3,4), more=TRUE)
print(d2, split=c(2,4,3,4), more=TRUE)
print(d3, split=c(3,4,3,4))
}
dianostic_plot(f, y = "log10(Density)")
# In canyon
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Canyon"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# On slope
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Slope"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
dat.mean.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=dat.mean, FUN=c(mean, sd, length))
dat.mean.mean$Density.se <- dat.mean.mean$Density.sd/dat.mean.mean$Density.length^0.5
dat.mean.mean <- dat.mean.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(dat.mean.mean) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
ggplot(data=dat.mean.mean,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, fill=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
#dat.mean.mean$Longitude <- round(dat.mean.mean$Longitude, 4)
#dat.mean.mean$Latitude <- round(dat.mean.mean$Latitude, 4)
#dat.mean.mean$Depth <- round(dat.mean.mean$Depth, 0)
#dat.mean.mean$Density <- round(dat.mean.mean$Density, 0)
#dat.mean.mean$sd <- round(dat.mean.mean$sd, 1)
#dat.mean.mean$sd <- round(dat.mean.mean$se, 1)
kable(dat.mean.mean)
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei_s, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
#out$Longitude <- round(out$Longitude, 4)
#out$Latitude <- round(out$Latitude, 4)
#out$Depth <- round(out$Depth, 0)
#out$Biomass <- round(out$Biomass, 0)
#out$sd <- round(out$sd, 1)
#out$se <- round(out$se, 1)
kable(out, align="c")
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(Biomass)~Depth, data=x) %>% summary)
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5, position="dodge")+
geom_errorbar(linetype=1, position="dodge")+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
scale_y_continuous(labels=function(x)paste("  ", x))+
theme_bw() %+replace% large
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(Biomass)~Depth, data=x) %>% summary)
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5, position="dodge")+
geom_errorbar(linetype=1, position="dodge")+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
scale_y_continuous(labels=function(x)paste("  ", x))+
theme_bw() %+replace% large %+replace% dark
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(doBy)
library(ggplot2)
library(reshape2)
library(readxl)
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white'),
legend.text = element_text(colour = 'white'),
axis.title = element_text(colour = 'white'),
axis.text = element_text(colour = 'white'),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
fx <- read.csv("../GPSC_data/GPSC_o2_profile/GPSC_DOU.csv")
fx$Region <- factor(fx$Region, levels=c("Kaohsiung", "Gaoping", "Fangliao", "Hongtsai", "Penghu", "Formosa", "Dongsha", "Taiping"))
fx$Station <- factor(fx$Station, levels=c("SC2a", "KS1", "KS2", "KS3", "GC1", "GC3", "GC4", "GC5", "GC6", "S1", "S2", "S3", "S4", "S5", "S6", "S7", "GS1", "GS3", "GS4", "GS5", "GS5B", "GS6", "GS7", "GS10", "FC1", "FC2", "FC2A", "FC3", "FC4", "FS1", "FS2", "FS3", "FS5C", "HC1", "S27", "S27a", "ST3", "ST5"))
library(swtmap)
library(maptools)
library(raster)
loc <- read_excel("../GPSC_data/GPSC_macro_sorting/GPSC_macro_sorting_2020.07.31.xlsx", sheet=1)
all <- summaryBy(Longitude+Latitude+Depth~Station+Habitat, data=as.data.frame(loc), FUN=mean, keep.names=TRUE)
loc <- all[match(unique(fx$Station), all$Station),]
loc[17,] <- all[53,]
coordinates(loc) <- c("Longitude", "Latitude")
projection(loc) <- projection(bathy)
e <- extent(119.8, 120.9, 21.6, 22.6)
r <- crop(bathy, e)
iso200<- rasterToContour(r, levels=-200)
iso1000<- rasterToContour(r, levels=c(-3000, -2000, -1000, 0))
extra <- function(...){
panel.levelplot.raster(...)
sp.lines(iso200, col="gray30", lty=2)
sp.lines(iso1000, col="gray30")
sp.points(loc, cex=1.5, pch=21, fill=c("black", "white")[factor(loc$Habitat)], col="black")
sp.pointLabel(loc, labels=loc$Station)
SpatialPolygonsRescale(layout.scale.bar(), offset=c(120.6, 21.65), scale = 30/(111.321*cos(21.65*pi/180)), fill = c("white","black"), col = "black")
sp.text(loc = c(120.62, 21.68), "0")
sp.text(loc = c(120.85, 21.68), "30 km")
}
tbspplot(r, panel=extra)
g <- ggplot(data = summaryBy(In_situ_Integrated_Prod+OPD~Cruise+Station+Habitat+Region, data=fx, FUN=c(mean, sd), na.rm=TRUE))
# Diffusive Oxygen Uptake
#nmol/cm2/s to mmol/m2/d
#1e4*3600*24/1e6 = 864
g+geom_bar(aes(x=Station, y=In_situ_Integrated_Prod.mean*864, group=Cruise, fill=Region, colour=Region), stat="identity", position="dodge")+
geom_errorbar(aes(x=Station, y=In_situ_Integrated_Prod.mean*864, ymin=(In_situ_Integrated_Prod.mean-In_situ_Integrated_Prod.sd)*864, ymax=In_situ_Integrated_Prod.mean*864, group=Cruise, colour=Region), position="dodge")+
facet_wrap(~Habitat, scales="free_x")+
ylab(expression(Diffusive~Oxygen~Uptake~(mmol~m^-2~d^-1)))+
theme_bw()+theme(axis.text.x=element_text(angle = 60, hjust = 1)) %+replace% dark
# Oxygen penertration depth
g+geom_bar(aes(x=Station, y=OPD.mean/1000, group=Cruise, fill=Region, colour=Region), stat="identity", position="dodge")+
geom_errorbar(aes(x=Station, y=OPD.mean/1000, ymax=(OPD.mean+OPD.sd)/1000, ymin=OPD.mean/1000, group=Cruise, colour=Region), position="dodge")+
facet_wrap(~Habitat, scales="free_x")+
ylab("Oxygen Penertration Depth (mm)")+
scale_y_reverse()+
theme_bw()+theme(axis.text.x=element_text(angle = 60, hjust = 1)) %+replace% dark
ob <- read.csv("../GPSC_data/GPSC_o2_profile/GPSC_o2_profile.csv")
ob$Region <- factor(ob$Region, levels=c("Kaohsiung", "Gaoping", "Fangliao", "Hongtsai", "Penghu", "Formosa", "Dongsha", "Taiping"))
ob$Station <- factor(ob$Station, levels=c("SC2a", "KS1", "KS2", "KS3", "GC1", "GC3", "GC4", "GC5", "GC6",
"S1", "S2", "S3", "S4", "S5", "S6", "S7", "GS1", "GS3", "GS4", "GS5", "GS5B", "GS6", "GS7", "GS10", "FC1", "FC2", "FC2A", "FC3", "FC4", "FS1", "FS2", "FS3", "FS5C", "HC1", "S27",  "S27a", "ST3", "ST5"))
ggplot(data = ob, aes(x=DO.mean, y=Depth/1000, group=.id, colour=Station))+
geom_point(size=0.3)+
geom_path()+
scale_y_reverse()+
facet_wrap(~Habitat, scale="free_x")+
ylab("Depth (mm)")+
xlab(expression(Dissolved~Oxygen~(mu~M)))+
theme_bw() %+replace% dark
ggplot(data = subset(ob, Cruise!="OR1_1128"), aes(x=DO.mean, y=Depth/1000, group=.id, colour=Region))+
geom_point(size=0.3)+
geom_path()+
scale_y_reverse()+
facet_wrap(~Habitat, scale="free_x")+
ylab("Depth (mm)")+
xlab(expression(Dissolved~Oxygen~(mu~M)))+
theme_bw() %+replace% dark
ggplot(data = subset(ob, Cruise!="OR1_1128"), aes(x=DO.mean, y=Depth/1000, group=.id, colour=Cruise))+
geom_point(size=0.3)+
geom_path()+
scale_y_reverse()+
facet_wrap(~Station, scale="free")+
ylab("Depth (mm)")+
xlab(expression(Dissolved~Oxygen~(mu~M)))+
theme_bw() %+replace% dark
ob <- read.csv("../GPSC_data/GPSC_o2_profile/bioturb_o2_profile.csv")
ggplot(data = subset(ob, !(.id=="OR1_1126_GC3_1_2_Ch1"|.id=="OR1_1126_GS3_1_3_Ch1")), aes(x=DO.mean, y=Depth/1000, group=.id, colour=Station))+
geom_point(size=0.3)+
geom_path()+
scale_y_reverse()+
facet_wrap(~Habitat, scale="free_x")+
ylab("Depth (mm)")+
xlab(expression(Dissolved~Oxygen~(mu~M)))+
theme_bw() %+replace% dark
fx <- summaryBy(Integrated_Prod+In_situ_Integrated_Prod~Region+Cruise+Station+Deployment, data=fx, FUN=c(mean, sd, length))
cru <- read_excel("../GPSC_data/GPSC_macro_sorting/GPSC_macro_sorting_2020.07.31.xlsx", sheet=1)
id1 <- with(cru, paste(Cruise, Station, Deployment))
id2 <- with(fx, paste(Cruise, Station, Deployment))
id2[id2=="OR1_1169 GS5 7"] <- "OR1_1169 GS5 1"
id2[id2=="OR1_1182 SC2a 3"] <- "OR1_1182 SC2 3"
fx <- cbind(cru[match(id2, id1),], fx)
# Fit a linear model
f <- lm((In_situ_Integrated_Prod.mean*864)~Depth*Habitat*Region, data=subset(fx, Region=="Gaoping"|Region=="Fangliao"))
summary(f)
anova(f)
ls <- splitBy(~Habitat, data=fx)
ls <- ls[names(ls)!="NA"]
f<-lapply(ls, FUN=function(x)lm((In_situ_Integrated_Prod.mean*864)~Depth, data=x))
lapply(f, FUN=summary)
f <- lm((In_situ_Integrated_Prod.mean*864)~Depth+Habitat, data=fx)
summary(f)
ggplot(data=subset(fx),
aes(x=Depth, y=In_situ_Integrated_Prod.mean*(-864),
ymin=(In_situ_Integrated_Prod.mean-In_situ_Integrated_Prod.sd)*(-864),
ymax=(In_situ_Integrated_Prod.mean+In_situ_Integrated_Prod.sd)*(-864),
colour=Region, shape=Habitat, group=Habitat))+
geom_point(size=3)+
scale_shape_manual(values=c(0,1,19,17,6))+
geom_errorbar()+
#stat_smooth(method="lm", formula=y~x, alpha=0.2, aes(colour=Habitat, fill=Habitat))+
facet_wrap(~Habitat, scales="free")+
scale_y_log10()+
xlab("Depth (m)")+
ylab(expression(Diffusive~Oxygen~Utilization~(mmol~m^-2~day^-1)))+
theme_bw() %+replace% dark
library(knitr)
out <- fx
out$In_situ_Integrated_Prod.mean <- out$In_situ_Integrated_Prod.mean*(-864)
out <- summaryBy(In_situ_Integrated_Prod.mean+In_situ_Integrated_Prod.length~Region+Habitat+Station, data=out, FUN=c(mean, sd, length, sum))
out <- out[c("Region", "Habitat", "Station", "In_situ_Integrated_Prod.mean.mean", "In_situ_Integrated_Prod.mean.length", "In_situ_Integrated_Prod.length.sum")]
names(out) <- c("Region", "Habitat", "Station", "DO_flux", "# of cruise", "# of profile")
cord <- cbind(coordinates(loc), Depth=loc$Depth)[match(out$Station, loc$Station),]
kable(cbind(cord, out), align="c")
tou <- read.csv("../GPSC_data/GPSC_incubation/GPSC_TOU.csv")
tou <- summaryBy(DO_flux+In_situ_DO_flux~Cruise+Station+Deployment+Tube+Habitat+Region+Depth, data=tou, FUN=c(mean, sd))
dou <- read.csv("../GPSC_data/GPSC_o2_profile/GPSC_DOU.csv")
dou$In_situ_Integrated_Prod <- dou$In_situ_Integrated_Prod*864
dou <- summaryBy(In_situ_Integrated_Prod~Cruise+Station+Deployment+Tube++Habitat+Region, data=dou, FUN=c(mean, sd))
id1 <- with(tou, paste(Cruise, Station, Deployment, Tube))
id2 <- with(dou, paste(Cruise, Station, Deployment, Tube))
com <- cbind(dou, tou[match(id2, id1), c("DO_flux.mean", "In_situ_DO_flux.mean")])
names(com)[7:10] <- c("DOU", "DOU.sd", "TOU", "In_situ_TOU")
com$BOU <- com$TOU-com$DOU
#com <- com[!is.na(com$BOU),]
id1 <- with(cru, paste(Cruise, Station))
id2 <- with(com, paste(Cruise, Station))
com$Depth <- cru$Depth[match(id2, id1)]
com$Depth[which(is.na(com$Depth))] <- cru$Depth[id1=="OR1_1182 SC2"]
long <- melt(com, id.vars=c("Cruise", "Station", "Deployment", "Tube", "Habitat",  "Region", "Depth"), measure.vars = c("TOU", "BOU", "DOU"), variable.name = "Flux")
long$Region <- factor(long$Region, levels=c("Kaohsiung", "Gaoping", "Fangliao", "Hongtsai", "Penghu", "Formosa", "Dongsha", "Taiping"))
long$Station <- factor(long$Station, levels=c("SC2a", "KS1", "KS2", "KS3", "GC1", "GC3", "GC4", "GC5", "GC6", "S3", "S4", "S5", "S6", "S7", "GS1", "GS3", "GS4", "GS5", "GS5B", "GS6", "GS7", "GS10", "FC1", "FC2", "FC2A", "FC3", "FC4", "FS1", "FS2", "FS3", "FS5C", "HC1", "S27",  "S27a", "ST3", "ST5"))
long <- na.omit(long)
# Fit a linear model
ls <- splitBy(~Flux, data=long)
f<-lapply(ls, FUN=function(x)lm((value)~Depth, data=x))
lapply(f, FUN=summary)
ggplot(data=subset(long, !Flux=="TOU"), aes(x=Station, y=-value, colour=Flux, fill=Flux, group=paste(Cruise, Station, Deployment, Tube)))+
geom_bar(stat = "identity", position="dodge")+
facet_wrap(~Habitat, scales="free_x")+
ylab(expression(Total~Oxygen~Utilization~(mmol~m^-2~d^-1)))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) %+replace% dark
ggplot(data=subset(long, !Flux=="TOU"), aes(x=Station, y=-value, colour=Flux, fill=Flux, group=paste(Cruise, Station, Deployment, Tube)))+
geom_bar(stat = "identity", position="dodge")+
ylim(0, NA)+
facet_wrap(~Habitat, scales="free_x")+
ylab(expression(Total~Oxygen~Utilization~(mmol~m^-2~d^-1)))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) %+replace% dark
ggplot(data=subset(long, !(Flux=="BOU"&value>0)), aes(x=Depth, y=-value, shape=Habitat, colour=Flux, group=Flux))+
geom_point(size=3)+
stat_smooth(data=subset(long, !(Flux=="BOU"&value>0|Flux=="DOU")), method="lm", formula=y~x, alpha=0.2)+
scale_y_log10()+
scale_shape_manual(values=c(19, 2, 1))+
facet_wrap(~Flux, scales="free")+
xlab("Depth (m)")+
ylab(expression(Sediment~Oxygen~Utilization~(mmol~m^-2~day^-1)))+
theme_bw()+theme(axis.text.x = element_text(angle = 30, hjust = 1)) %+replace% dark
cs <- summaryBy(DOU+TOU+Depth~Cruise+Station+Habitat+Region, data=com, FUN=mean, keep.names = TRUE)
st <- summaryBy(DOU+TOU+Depth~Station+Habitat+Region, data=cs, FUN=mean, keep.names = TRUE)
st$BOU <- st$TOU-st$DOU
long <- melt(st,  measure.vars = c("TOU", "BOU", "DOU"), variable.name = "Flux")
long <- na.omit(long)
long$Station <- factor(long$Station, levels=c("SC2a", "KS1", "KS2", "KS3", "GC1", "GC3", "GC4", "GC5", "GC6", "S3", "S4", "S5", "S6", "S7", "GS1", "GS3", "GS4", "GS5", "GS5B", "GS6", "GS7", "GS10", "FC1", "FC2", "FC2A", "FC3", "FC4", "FS1", "FS2", "FS3", "FS5C", "HC1", "S27",  "S27a", "ST3", "ST5"))
ggplot(data=subset(long, !Flux=="TOU"), aes(x=Station, y=-value, colour=Flux, fill=Flux, group=Station))+
geom_bar(stat = "identity")+
facet_wrap(~Habitat, scales="free_x")+
ylab(expression(Total~Oxygen~Utilization~(mmol~m^-2~d^-1)))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) %+replace% dark
ggplot(data=subset(long, !Flux=="TOU"), aes(x=Station, y=-value, colour=Flux, fill=Flux, group=Station))+
geom_bar(stat = "identity", position="dodge")+
facet_wrap(~Habitat, scales="free_x")+
ylim(0, NA)+
ylab(expression(Total~Oxygen~Utilization~(mmol~m^-2~d^-1)))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) %+replace% dark
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(ggplot2)
library(doBy)
library(reshape2)
library(scales)
library(plyr)
library(readxl)
library(knitr)
library(TWBathyMap)
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white'),
legend.text = element_text(colour = 'white'),
axis.title = element_text(colour = 'white'),
axis.text = element_text(colour = 'white'),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Load data
ic <- read_excel("../GPSC_data/GPSC_incubation/GPSC_incubation_2020.07.24.xlsx", sheet=1)
ic <- ic[!is.na(ic$DO),]
ic <- ic[-grep("Bad", ic$Comment),]
# Remove OR1_1126 GC1, GS3, GS4 because it's show very large flux and only based on 2 points
# Remove OR1_1114 GC1 because it's show extremely large flux
# Remove OR1_1151 because it's show extremely low faunal abundance
bad1 <- with(ic, Cruise=="OR1_1114" & Station=="GC1")
bad2 <- with(ic, Cruise=="OR1_1126" & (Station=="GC1"|Station=="GS3"|Station=="GS4"))
#bad3 <- with(ic, Cruise=="OR1_1151")
water <- with(ic, Sample=="W")
ic <- ic[!(bad1|bad2|water), ]
ic$DateTime <- as.POSIXct(paste(ic$Date, ic$Time, sep=" "), tz="Asia/Taipei")
ic$Region <- factor(ic$Station)
levels(ic$Region)
