plb <- rbind(cbind(Class="Macrofauna", plb_mac),
cbind(Class="Meiofauna", plb_mei))
SortWt <- rbind(cbind(Class="Macrofauna", SortWt_mac),
cbind(Class="Meiofauna", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=3)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("PLBfunctions.r")
# Macrofauna
hab <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
nbss <- rbind(cbind(Class="Macrofauna", nbss_mac),
cbind(Class="Meiofauna", nbss_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
#scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Macrofauna > 1e-2
hab <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna" & Size > 1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1e-4
hab <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna" & Size > 1.5e-4))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
#nbss <- rbind(cbind(Class="Macrofauna", nbss_mac),
#              cbind(Class="Meiofauna", nbss_mei))
plb <- rbind(cbind(Class="Macrofauna", plb_mac),
cbind(Class="Meiofauna", plb_mei))
SortWt <- rbind(cbind(Class="Macrofauna", SortWt_mac),
cbind(Class="Meiofauna", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=3)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
nbss
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Macrofauna > 1e-2
hab <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna" & Size > 1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
#out <- lapply(wt, FUN=LBNbiom.method)
#nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
#info <- ldply(strsplit(nbss$.id, split="[|]"))
#names(info) <- "Habitat"
#nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1e-4
hab <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna" & Size > 1.5e-4))
wt <- lapply(hab, FUN=function(x)x$Wt)
#out <- lapply(wt, FUN=LBNbiom.method)
#nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
#info <- ldply(strsplit(nbss$.id, split="[|]"))
#names(info) <- "Habitat"
#nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
#nbss <- rbind(cbind(Class="Macrofauna", nbss_mac),
#              cbind(Class="Meiofauna", nbss_mei))
plb <- rbind(cbind(Class="Macrofauna", plb_mac),
cbind(Class="Meiofauna", plb_mei))
SortWt <- rbind(cbind(Class="Macrofauna", SortWt_mac),
cbind(Class="Meiofauna", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=3)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("PLBfunctions.r")
# Macrofauna
hab <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mac <- cbind(info, nbss[, -1])
# Meiofauna
hab <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss_mei <- cbind(info, nbss[, -1])
nbss <- rbind(cbind(Class="Macrofauna", nbss_mac),
cbind(Class="Meiofauna", nbss_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=3)+
geom_path()+
scale_shape_manual(values=c(19, 1))+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
#scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Macrofauna > 1e-2
hab <- splitBy(~Habitat, data=subset(si, Class=="Macrofauna" & Size > 1e-2))
wt <- lapply(hab, FUN=function(x)x$Wt)
#out <- lapply(wt, FUN=LBNbiom.method)
#nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
#info <- ldply(strsplit(nbss$.id, split="[|]"))
#names(info) <- "Habitat"
#nbss_mac <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mac <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mac <- cbind(info, SortWt[, -1])
# Meiofauna > 1e-4
hab <- splitBy(~Habitat, data=subset(si, Class=="Meiofauna" & Size > 1.5e-4))
wt <- lapply(hab, FUN=function(x)x$Wt)
#out <- lapply(wt, FUN=LBNbiom.method)
#nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
#info <- ldply(strsplit(nbss$.id, split="[|]"))
#names(info) <- "Habitat"
#nbss_mei <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- "Habitat"
plb_mei <- cbind(info, plb[, -1])
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- "Habitat"
SortWt_mei <- cbind(info, SortWt[, -1])
#nbss <- rbind(cbind(Class="Macrofauna", nbss_mac),
#              cbind(Class="Meiofauna", nbss_mei))
plb <- rbind(cbind(Class="Macrofauna", plb_mac),
cbind(Class="Meiofauna", plb_mei))
SortWt <- rbind(cbind(Class="Macrofauna", SortWt_mac),
cbind(Class="Meiofauna", SortWt_mei))
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Class, shape=Habitat))+
geom_point(size=3)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_shape_manual(values=c(19, 1))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
strip.text=element_text(size=20),
axis.title = element_text(size=20),
axis.text.y = element_text(size=20),
axis.text.x = element_text(size=20, angle=60, hjust=0.5))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("PLBfunctions.r")
hab <- splitBy(~Habitat, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- "Habitat"
nbss <- cbind(info, nbss[, -1])
head(nbss)
log10(nbss$totalBiomNorm)
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=3)+
geom_path(size=1)+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
hab <- splitBy(~Habitat, data=si)
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, lowerCutOff=1e-3))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
# Use functions from Edwards etal. (2017) Methods in Ecology and Evolution 1:57-67
# https://github.com/andrew-edwards/fitting-size-spectra
source("PLBfunctions.r")
hab <- splitBy(~Habitat, data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
2^( floor(log2(min(wt))) : ceiling(log2(max(wt)))
)
2^( floor(log2(min(wt[[1]]))) : ceiling(log2(max(wt[[1]]))) )
library(devtools)
install_github("andrew-edwards/sizeSpectra")
library(sizeSpetra)
library(sizeSpectra)
?sizeSpectra
?sizeSpectra
library(sizeSpectra)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
#library(devtools)
#install_github("andrew-edwards/sizeSpectra")
library(sizeSpectra)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
hab <- splitBy(~Habitat, data=subset(mei, Cruise=="OR1_1114"|Cruise=="OR1_1126"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
out
out[[1]]
MLE.method<-
function(x){
log.x = log(x)                      # to avoid keep calculating
sum.log.x = sum( log.x )
xmin = min(x)
xmax = max(x)
# MLE (maximum likelihood method) calculations.
# Use analytical value of MLE b for PL model (Box 1, Edwards et al. 2007)
#  as a starting point for nlm for MLE of b for PLB model.
PL.bMLE = 1/( log(min(x)) - sum.log.x/length(x)) - 1
PLB.minLL =  nlm(negLL.PLB, p=PL.bMLE, x=x, n=length(x),
xmin=xmin, xmax=xmax, sumlogx=sum.log.x) #, print.level=2 )
PLB.bMLE = PLB.minLL$estimate
# 95% confidence intervals for MLE method.
PLB.minNegLL = PLB.minLL$minimum
# Values of b to test to obtain confidence interval. For the real movement data
#  sets in Table 2 of Edwards (2011) the intervals were symmetric, so make a
#  symmetric interval here.
bvec = seq(PLB.bMLE - 0.5, PLB.bMLE + 0.5, 0.00001)
PLB.LLvals = vector(length=length(bvec))  # negative log-likelihood for bvec
for(i in 1:length(bvec))
{
PLB.LLvals[i] = negLL.PLB(bvec[i], x=x, n=length(x), xmin=xmin,
xmax=xmax, sumlogx=sum.log.x)
}
critVal = PLB.minNegLL  + qchisq(0.95,1)/2
# 1 degree of freedom, Hilborn and Mangel (1997) p162.
bIn95 = bvec[ PLB.LLvals < critVal ]
# b values in 95% confidence interval
PLB.MLE.bConf = c(min(bIn95), max(bIn95))
if(PLB.MLE.bConf[1] == min(bvec) | PLB.MLE.bConf[2] == max(bvec))
{ windows()
plot(bvec, PLB.LLvals)
abline(h = critVal, col="red")
stop("Need to make bvec larger - see R window")   # Could automate
}
x.PLB = seq(min(x), max(x), length=1000)     # x values to plot PLB. Note
# that these encompass the data, and are not based
# on the binning (in MEE Figure 6 the line starts as
# min(x), not the first bin.
B.PLB = dPLB(x.PLB, b = PLB.bMLE, xmin=min(x.PLB),
xmax=max(x.PLB)) * length(x) * x.PLB
B.PLB.UC <- dPLB(x.PLB, b = min(bIn95), xmin=min(x.PLB), xmax=max(x.PLB)) * length(x) * x.PLB
B.PLB.LC <- dPLB(x.PLB, b = max(bIn95), xmin=min(x.PLB), xmax=max(x.PLB)) * length(x) * x.PLB
# The biomass density, from equation (7), using the MLE for b.
y.PLB = (1 - pPLB(x = x.PLB, b = PLB.bMLE, xmin = min(x.PLB),
xmax = max(x.PLB))) * length(x)
y.PLB.UC <- (1 - pPLB(x = x.PLB, b = min(bIn95), xmin = min(x.PLB), xmax = max(x.PLB))) * length(x)
y.PLB.LC <- (1 - pPLB(x = x.PLB, b = max(bIn95), xmin = min(x.PLB),xmax = max(x.PLB))) * length(x)
# NBSS slope, confidence interval of slope, fitted values and upper CI, lower CI, individual rank and upper CI, lower CI
list(PLB.bMLE=PLB.bMLE, PLB.MLE.bConf=PLB.MLE.bConf, PLB=cbind(x.PLB, B.PLB, B.PLB.UC, B.PLB.LC, y.PLB, y.PLB.UC, y.PLB.LC))
}
hab <- splitBy(~Habitat, data=subset(mei, (Cruise=="OR1_1114"|Cruise=="OR1_1126")&Size>1e-4))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=LBNbiom.method)
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>9]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_colour_manual(values=c("black", "gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_colour_manual(values=c("black", "gray"))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw()%+replace% large %+replace% rotate #%+replace% dark
