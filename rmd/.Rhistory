names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
# Only keep Wt > 5.859375e-03
hab <- splitBy(~Habitat, data=subset(mac_s, Condition=="C" &Wt>=1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
# Only keep Wt > 5.859375e-03
hab <- splitBy(~Habitat, data=subset(mac_s, Condition=="C" &Wt>=1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat")
nbss <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
hab <- splitBy(~Cruise+Habitat, data=subset(mac_s, Condition=="C"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiom, colour=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
facet_wrap(~Cruise, scales="free")+
scale_colour_manual(values=c("black","gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(size=1)+
facet_wrap(~Cruise, scales="free")+
scale_colour_manual(values=c("black","gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Only keep Wt >= 1e-02
hab <- splitBy(~Cruise+Habitat, data=subset(mac_s, Condition=="C" & Wt>= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>3]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
plb <- cbind(info, plb[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Cruise, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss,aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=5)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Cruise, scales="free")+
scale_colour_manual(values=c("black","gray"))+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw() %+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
facet_wrap(~Cruise, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
hab <- splitBy(~Habitat+Depth.zone, data=subset(mac_s, Condition=="C"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Depth.zone, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiom, colour=Habitat))+
geom_point(size=3)+
geom_path(size=1)+
scale_colour_manual(values=c("black","gray"))+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw()%+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=3)+
geom_path(size=1)+
scale_colour_manual(values=c("black","gray"))+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large #%+replace% dark
# Only keep Wt >= 1e-02
hab <- splitBy(~Habitat+Depth.zone, data=subset(mac_s, Condition=="C" & Wt>= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
plb <- cbind(info, plb[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_wrap(~Depth.zone, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=3)+
scale_colour_manual(values=c("black","gray"))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Depth")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
facet_wrap(~Depth, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Condition=="C"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_grid(Cruise~Depth.zone, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiom, colour=Habitat))+
geom_point(size=3)+
geom_path(size=1)+
scale_colour_manual(values=c("black","gray"))+
facet_grid(Cruise~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw()%+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=3)+
geom_path(size=1)+
scale_colour_manual(values=c("black","gray"))+
facet_grid(Cruise~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large #%+replace% dark
# Only keep size >= 1e-02
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Wt >= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>21]
out <- lapply(wt, FUN=MLE.method)
unlist(lapply(wt, length))
# Only keep size >= 1e-02
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Wt >= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>22]
out <- lapply(wt, FUN=MLE.method)
# Only keep size >= 1e-02
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Wt >= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>29]
out <- lapply(wt, FUN=MLE.method)
# Only keep size >= 1e-02
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Wt >= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>33]
out <- lapply(wt, FUN=MLE.method)
# Only keep size >= 1e-02
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Wt >= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>48]
out <- lapply(wt, FUN=MLE.method)
# Only keep size >= 1e-02
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Wt >= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>55]
out <- lapply(wt, FUN=MLE.method)
# Only keep size >= 1e-02
hab <- splitBy(~Cruise+Habitat+Depth.zone, data=subset(mac_s, Wt >= 1e-02))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>59]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
plb <- cbind(info, plb[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_grid(Cruise~Depth.zone, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=3)+
scale_colour_manual(values=c("black","gray"))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_grid(Cruise~Depth, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()%+replace% large #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Cruise", "Habitat", "Depth")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=3)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
scale_colour_manual(values=c("black","gray"))+
facet_grid(Cruise~Depth, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw() %+replace% large %+replace% rotate #%+replace% dark
hab <- splitBy(~Habitat+Taxon, data=subset(mac_s, Condition=="C"))
wt <- lapply(hab, FUN=function(x)x$Wt)
out <- lapply(wt, FUN=function(x)LBNbiom.method(x, binBreaks=bks))
nbss <- ldply(lapply(out, FUN=function(x)x$binVals), data.frame)
info <- ldply(strsplit(nbss$.id, split="[|]"))
names(info) <- c("Habitat", "Taxon")
nbss <- cbind(info, nbss[, -1])
wt <- wt[unlist(lapply(wt, length))>8]
out <- lapply(wt, FUN=MLE.method)
# size specutrum slope estimate by MLE
lapply(out, FUN=function(x)x[1:2])
plb <- ldply(lapply(out, FUN=function(x)x$PLB))
info <- ldply(strsplit(plb$.id, split="[|]"))
names(info) <- c("Habitat", "Taxon")
plb <- cbind(info, plb[, -1])
ggplot(data=ldply(hab),
aes(x=log10(Wt), fill=Habitat))+
geom_density(alpha=0.5)+
scale_fill_manual(values=c("black", "gray"))+
facet_grid(Cruise~Category, scales="free")+
labs(y="Frequency", x=expression(Log[10]~body~size~(mg)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiom, colour=Habitat))+
geom_point(size=3)+
geom_path(size=1)+
scale_colour_manual(values=c("black","gray"))+
facet_wrap(~Taxon, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw()  %+replace% large  %+replace% rotate #%+replace% dark
ggplot(data=nbss, aes(x=log10binMid, y=log10totalBiomNorm, colour=Habitat))+
geom_point(size=3)+
geom_path(size=1)+
scale_colour_manual(values=c("black","gray"))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB)))+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.LC)), linetype=2)+
#geom_path(data=plb, aes(x=log10(x.PLB), y=log10(B.PLB.UC)), linetype=2)+
facet_wrap(~Taxon, scales="free")+
labs(x=expression(Log[10]~"mid-point of"~size~class~(mg)), y=expression(Log[10]~normalized~biomass))+
theme_bw()  %+replace% large  %+replace% rotate #%+replace% dark
# Rank individual weight
SortWt <- lapply(hab, FUN=function(x)cbind(rank=1:length(x$Wt), weight=sort(x$Wt, decreasing=TRUE)))
SortWt <- ldply(SortWt)
info <- ldply(strsplit(SortWt$.id, split="[|]"))
names(info) <- c("Habitat", "Taxon")
SortWt <- cbind(info, SortWt[, -1])
ggplot(data=SortWt, aes(x=weight, y=rank, colour=Habitat))+
geom_point(size=2)+
scale_colour_manual(values=c("black","gray"))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB))+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.LC), linetype=2)+
geom_path(data=plb, aes(x=x.PLB, y=y.PLB.UC), linetype=2)+
facet_wrap(~Taxon, scales="free")+
scale_x_log10(expression(Individual~weight~(mg)))+
scale_y_log10("Individual rank", limits=c(1, NA))+
theme_bw()%+replace% large %+replace% rotate #%+replace% dark
library(knitr)
dat.mean <- summaryBy(Wt+Depth~Region+Habitat+Cruise+Station, data=subset(mac_s, Condition=="C"), FUN=c(mean, sd, length))
dat.mean$Wt.se <- dat.mean$Wt.sd/dat.mean$Wt.length^0.5
ggplot(data=dat.mean,
aes(x=Depth.mean, y=Wt.mean,
ymin=Wt.mean-Wt.se, ymax=Wt.mean+Wt.se,
colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
scale_colour_manual(values=c("black","gray"))+
geom_errorbar()+
stat_smooth(method="lm", formula=y~x, alpha=0.2, colour="gray20", se=FALSE)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Mean~body~size~(mg~indiv^-1)))+
scale_y_log10()+
theme_bw() %+replace% large
out <- dat.mean[, c("Region", "Habitat", "Cruise", "Station", "Depth.mean", "Wt.length", "Wt.mean", "Wt.sd", "Wt.se")]
names(out) <- c("Region", "Habitat", "Cruise", "Station", "Depth", "n", "Mean Size", "SD", "SE")
out$Depth <- round(out$Depth, 0)
out$`Mean Size` <- round(out$`Mean Size`, 2)
out$SD <- round(out$SD, 3)
out$SE <- round(out$SE, 3)
kable(out, align="c")
dat.mean <- summaryBy(Wt+Depth~Region+Habitat+Station, data=mac_s, FUN=c(mean, sd, length))
dat.mean$Wt.se <- dat.mean$Wt.sd/dat.mean$Wt.length^0.5
ggplot(data=dat.mean,
aes(x=Depth.mean, y=Wt.mean,
ymin=Wt.mean-Wt.se, ymax=Wt.mean+Wt.se,
colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
scale_colour_manual(values=c("black","gray"))+
geom_errorbar()+
stat_smooth(method="lm", formula=y~x, alpha=0.2, colour="gray20", se=FALSE)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Mean~body~size~(mg~indiv^-1)))+
scale_y_log10()+
theme_bw() %+replace% large
out <- dat.mean[, c("Region", "Habitat", "Station", "Depth.mean", "Wt.length", "Wt.mean", "Wt.sd", "Wt.se")]
names(out) <- c("Region", "Habitat", "Station", "Depth", "n", "Mean Size", "SD", "SE")
out$Depth <- round(out$Depth, 0)
out$`Mean Size` <- round(out$`Mean Size`, 2)
out$SD <- round(out$SD, 3)
out$SE <- round(out$SE, 3)
kable(out, align="c")
