aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, fill=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
# Remove Cyclopoida and Calanoida
dat.sum <- subset(dat.sum, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Match to marofauna production parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate R/M ratio
# Convert bodymass in J to kcal
individualRM <- 8.3732-0.2073*log10(dat.sum$Bodymass)-2766.0235 /(dat.sum$Temperature+273.15)
RMresults<-cbind(dat.sum, daily.RtoM=10^individualRM)
# Daily respiration in mg WM per species and sample per square meter
RMresults$respirationW <- with(RMresults, daily.RtoM*Wt/Sample.area)
# Daily respiration in J per species and sample per square meter
RMresults$respirationJ <- with(RMresults, respirationW*ConFac_j2mgwm)
# Daily respiration in milligram carbon per species and sample per square meter
RMresults$respirationC <- with(RMresults, respirationJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+daily.RtoM~Habitat+Cruise+Station+Deployment+Tube+Subcore, data = RMresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(respirationW+respirationJ+respirationC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube+Subcore, data = RMresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-6])
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+daily.RtoM+respirationW+respirationJ+respirationC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
# Remove Cyclopoida and Calanoida
dat.sum <- subset(dat.sum, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Match to marofauna respiration parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate R/M ratio
# Convert bodymass in J to kcal
individualRM <- 8.3732-0.2073*log10(dat.sum$Bodymass)-2766.0235 /(dat.sum$Temperature+273.15)
RMresults<-cbind(dat.sum, daily.RtoM=10^individualRM)
# Daily respiration in mg WM per species and sample per square meter
RMresults$respirationW <- with(RMresults, daily.RtoM*Wt/Sample.area)
# Daily respiration in J per species and sample per square meter
RMresults$respirationJ <- with(RMresults, respirationW*ConFac_j2mgwm)
# Daily respiration in milligram carbon per species and sample per square meter
RMresults$respirationC <- with(RMresults, respirationJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+daily.RtoM~Habitat+Cruise+Station+Deployment+Tube, data = RMresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(respirationW+respirationJ+respirationC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube, data = RMresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-5])
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+daily.RtoM+respirationW+respirationJ+respirationC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "daily.RtoM.mean", "respirationW.mean", "respirationW.se", "respirationJ.mean", "respirationJ.se", "respirationC.mean", "respirationC.se", "Depth.length")]
names(out) <- c("Habitat", "Cruise", "Station", "Depth", "daily.RtoM", "respirationW", "respirationW.se", "respirationJ", "respirationJ.se", "respirationC", "respirationC.se", "n")
kable(out)
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
# Remove Cyclopoida and Calanoida
dat.sum <- subset(dat.sum, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Match to marofauna respiration parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate R/M ratio
# Convert bodymass in J to kcal
individualRM <- 8.3732-0.2073*log10(dat.sum$Bodymass)-2766.0235 /(dat.sum$Temperature+273.15)
RMresults<-cbind(dat.sum, daily.RtoM=10^individualRM)
# Daily respiration in mg WM per species and sample per square meter
RMresults$respirationW <- with(RMresults, daily.RtoM*Wt/Sample.area)
# Daily respiration in J per species and sample per square meter
RMresults$respirationJ <- with(RMresults, respirationW*ConFac_j2mgwm)
# Daily respiration in milligram carbon per species and sample per square meter
RMresults$respirationC <- with(RMresults, respirationJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+daily.RtoM~Habitat+Cruise+Station+Deployment+Tube, data = RMresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(respirationW+respirationJ+respirationC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube, data = RMresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-5])
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+daily.RtoM+respirationW+respirationJ+respirationC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "daily.RtoM.mean", "respirationW.mean", "respirationW.se", "respirationJ.mean", "respirationJ.se", "respirationC.mean", "respirationC.se", "Depth.length")]
names(out) <- c("Habitat", "Cruise", "Station", "Depth", "daily.RtoM", "respirationW", "respirationW.se", "respirationJ", "respirationJ.se", "respirationC", "respirationC.se", "n")
kable(out)
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
#ymin=daily.RtoM-lowerCI, ymax=daily.RtoM+upperCI,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
#geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
#ymin=daily.RtoM-lowerCI, ymax=daily.RtoM+upperCI,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
#geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
f <- gls(daily.RtoM ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=out, method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# Function to plot dianotics plot
dianostic_plot <-
function(f, y){
# standardized residuals versus fitted values
a1 <- plot(f, resid(., type = "p") ~ fitted(.) | Habitat, abline = 0)
a2 <- plot(f, resid(., type = "p") ~ fitted(.) | Cruise, abline = 0)
a3 <- plot(f, resid(., type = "p") ~ fitted(.), abline = 0)
# box-plots of residuals
b1<-plot(f, Habitat ~ resid(.))
b2 <- plot(f, Cruise ~ resid(.))
# observed versus fitted values
c1<-plot(f, paste(paste(y, "fitted(.)", sep="~"), "Habitat", sep="|") %>% formula, abline = c(0,1))
c2<-plot(f, paste(paste(y, "fitted(.)", sep="~"), "Cruise", sep="|") %>% formula, abline = c(0,1))
c3<-plot(f, paste(y, "fitted(.)", sep="~") %>% formula, abline = c(0,1))
# QQ plot
d1<-qqnorm(f, ~ resid(., type = "p") | Habitat, abline = c(0,1))
d2<-qqnorm(f, ~ resid(., type = "p") | Cruise, abline = c(0,1))
d3<-qqnorm(f, ~ resid(., type = "p"), abline = c(0,1))
print(a1, split=c(1,1,3,4), more=TRUE)
print(a2, split=c(2,1,3,4), more=TRUE)
print(a3, split=c(3,1,3,4), more=TRUE)
print(b1, split=c(1,2,3,4), more=TRUE)
print(b2, split=c(2,2,3,4), more=TRUE)
#
print(c1, split=c(1,3,3,4), more=TRUE)
print(c2, split=c(2,3,3,4), more=TRUE)
print(c3, split=c(3,3,3,4), more=TRUE)
print(d1, split=c(1,4,3,4), more=TRUE)
print(d2, split=c(2,4,3,4), more=TRUE)
print(d3, split=c(3,4,3,4))
}
dianostic_plot(f, y = "daily.RtoM")
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationW)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationW),
ymin=log10(respirationW-respirationW.se), ymax=log10(respirationW+respirationW.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mg~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationW)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationW),
ymin=log10(respirationW-respirationW.se), ymax=log10(respirationW+respirationW.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodge(width=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mg~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
f <- gls(log10(respirationW) ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=out, method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# Dianotics plot
dianostic_plot(f, y = "log10(respirationW)")
# In canyon
f <- gls(log10(respirationW) ~ Depth+Cruise+Depth:Cruise, data=subset(out, Habitat == "Canyon"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# On slope
f <- gls(log10(respirationW) ~ Depth+Cruise+Depth:Cruise, data=subset(out, Habitat == "Slope"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationC)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationC)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodge(width=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(paddin=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodge(paddin=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(padding=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodge(padding=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(padding=0.2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodge(padding=0.2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodge(width=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationC)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position="jitter")+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position="jitter")+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationC)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=jitter)+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=jitter)+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationC)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationC),
ymin=log10(respirationC-respirationC.se), ymax=log10(respirationC+respirationC.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position="jitter")+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position="jitter")+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(mgC~m^-2~day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationJ)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationJ),
ymin=log10(respirationJ-respirationJ.se), ymax=log10(respirationJ+respirationJ.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(J~m^-2~yr^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationJ)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationJ),
ymin=log10(respirationJ-respirationJ.se), ymax=log10(respirationJ+respirationJ.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position="jitter")+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position="jitter")+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(J~m^-2~yr^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationJ)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationJ),
ymin=log10(respirationJ-respirationJ.se), ymax=log10(respirationJ+respirationJ.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_jitter(width=0.2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_jitter(width=0.2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(J~m^-2~yr^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationJ)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationJ),
ymin=log10(respirationJ-respirationJ.se), ymax=log10(respirationJ+respirationJ.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_jitter(width=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_jitter(width=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(J~m^-2~yr^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationJ)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationJ),
ymin=log10(respirationJ-respirationJ.se), ymax=log10(respirationJ+respirationJ.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodger(width=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(J~m^-2~yr^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(respirationJ)~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=log10(respirationJ),
ymin=log10(respirationJ-respirationJ.se), ymax=log10(respirationJ+respirationJ.se),
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(data=subset(out, Habitat=="Slope"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position=position_dodge(width=2))+
scale_colour_manual(values=c("black","gray30"))+
scale_fill_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~respiration~(J~m^-2~yr^-1)))+
theme_bw() %+replace% large #%+replace% dark
