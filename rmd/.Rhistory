out <- summaryBy(Depth+annual.PtoB+productionW+productionJ+productionC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mei, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Subcore+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-7] <- c("Wt", "Count")
dat.sum$Sample.area <- mei$Area[match(with(dat.sum, paste(Cruise, Station)), with(mei, paste(Cruise, Station)))]
# Match to marofauna production parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate P/B ratio
# Convert bodymass in J to kcal
individualPB <- 0.073*(dat.sum$Bodymass/4184)^-0.337
PBresults<-cbind(dat.sum, annual.PtoB=individualPB)
# annual secondary production in mulligram WM per species and sample per square meter
PBresults$productionW <- with(PBresults, annual.PtoB*Wt/Sample.area)
# annual secondary production in Joule per species and sample per square meter
PBresults$productionJ <- with(PBresults, productionW*ConFac_j2mgwm)
# conversion from Joule to milligram carbon per square meter
PBresults$productionC <- with(PBresults, productionJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+annual.PtoB~Habitat+Cruise+Station+Deployment+Tube+Subcore, data = PBresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(productionW+productionJ+productionC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube+Subcore, data = PBresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-6])
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+annual.PtoB+productionW+productionJ+productionC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "annual.PtoB.mean", "annual.PtoB.se", "productionW.mean", "productionW.se", "productionJ.mean", "productionJ.se", "productionC.mean", "productionC.se", "Depth.length")]
names(out) <- c("Habitat", "Cruise", "Station", "Depth", "annual.PtoB", "annual.PtoB.se", "productionW", "productionW.se", "productionJ", "productionJ.se", "productionC", "productionC.se", "n")
kable(out)
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(annual.PtoB~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=annual.PtoB,
ymin=annual.PtoB-annual.PtoB.se, ymax=annual.PtoB+annual.PtoB.se,
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
#stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Average~P/B~Ratio~(year^-1)))+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
# Remove Cyclopoida and Calanoida
dat.sum <- subset(dat.sum, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Match to marofauna production parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate P/B ratio
individualPB<-BenthicPB(dat.sum)
# Convert bodymass in J to kcal
# Calculate nematode P/B ratio using Schwinghamer et al. (1986) equation
nemaPB <- 0.073*(dat.sum$Bodymass/4184)^-0.337
individualPB[dat.sum$Taxon == "Nematoda", "annual.PtoB"] <- nemaPB[dat.sum$Taxon == "Nematoda"]
PBresults<-cbind(dat.sum,individualPB)
# annual secondary production in mulligram WM per species and sample per square meter
PBresults$productionW <- with(PBresults, annual.PtoB*Wt/Sample.area)
# annual secondary production in Joule per species and sample per square meter
PBresults$productionJ <- with(PBresults, productionW*ConFac_j2mgwm)
# conversion from Joule to milligram carbon per square meter
PBresults$productionC <- with(PBresults, productionJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+annual.PtoB+lowerCI+upperCI~Habitat+Cruise+Station+Deployment+Tube, data = PBresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(productionW+productionJ+productionC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube, data = PBresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-5])
# Remove outlier samples with only 1 individuals
bad <- with(pd, Count <=1 | (Cruise=="OR1_1102" & Station == "GS4") )
dat <- subset(dat, !bad)
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+annual.PtoB+lowerCI+upperCI+productionW+productionJ+productionC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "annual.PtoB.mean", "annual.PtoB.se", "productionW.mean", "productionW.se", "productionJ.mean", "productionJ.se", "productionC.mean", "productionC.se", "Depth.length")]
names(out) <- c("Habitat", "Cruise", "Station", "Depth", "annual.PtoB", "annual.PtoB.se", "productionW", "productionW.se", "productionJ", "productionJ.se", "productionC", "productionC.se", "n")
kable(out)
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(annual.PtoB~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=annual.PtoB,
ymin=annual.PtoB-annual.PtoB.se, ymax=annual.PtoB+annual.PtoB.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position="dodge")+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Average~P/B~Ratio~(year^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(annual.PtoB~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=annual.PtoB,
ymin=annual.PtoB-annual.PtoB.se, ymax=annual.PtoB+annual.PtoB.se,
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
#stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Production~"to"~Biomass~(P/B)~Ratio~(year^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(annual.PtoB~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=annual.PtoB,
ymin=annual.PtoB-annual.PtoB.se, ymax=annual.PtoB+annual.PtoB.se,
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
#stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(P/B~Ratio~(year^-1)))+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mei, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Subcore+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-7] <- c("Wt", "Count")
dat.sum$Sample.area <- mei$Area[match(with(dat.sum, paste(Cruise, Station)), with(mei, paste(Cruise, Station)))]
# Match to marofauna production parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate R/M ratio
# Convert bodymass in J to kcal
individualRM <- 8.3732-0.2073*log10(dat.sum$Bodymass)-2766.0235 /(dat.sum$Temperature+273.15)
RMresults<-cbind(dat.sum, daily.RtoM=10^individualRM)
# Daily respiration in mg WM per species and sample per square meter
RMresults$respirationW <- with(RMresults, daily.RtoM*Wt/Sample.area)
# Daily respiration in J per species and sample per square meter
RMresults$respirationJ <- with(RMresults, respirationW*ConFac_j2mgwm)
# Daily respiration in milligram carbon per species and sample per square meter
RMresults$respirationC <- with(RMresults, respirationJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+daily.RtoM~Habitat+Cruise+Station+Deployment+Tube+Subcore, data = RMresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(respirationW+respirationJ+respirationC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube+Subcore, data = RMresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-6])
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+daily.RtoM+respirationW+respirationJ+respirationC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "daily.RtoM.mean", "daily.RtoM.se", "respirationW.mean", "respirationW.se", "respirationJ.mean", "respirationJ.se", "respirationC.mean", "respirationC.se", "Depth.length")]
names(out) <- c("Habitat", "Cruise", "Station", "Depth", "daily.RtoM", "daily.RtoM.se", "respirationW", "respirationW.se", "respirationJ", "respirationJ.se", "respirationC", "respirationC.se", "n")
kable(out)
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(data=subset(out, Habitat=="Canyon")method="lm", formula=y~x, alpha=0.2)+
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(data=subset(out, Habitat=="Canyon"), method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
# Remove Cyclopoida and Calanoida
dat.sum <- subset(dat.sum, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Match to marofauna respiration parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate R/M ratio
# Convert bodymass in J to kcal
individualRM <- 8.3732-0.2073*log10(dat.sum$Bodymass)-2766.0235 /(dat.sum$Temperature+273.15)
RMresults<-cbind(dat.sum, daily.RtoM=10^individualRM)
# Daily respiration in mg WM per species and sample per square meter
RMresults$respirationW <- with(RMresults, daily.RtoM*Wt/Sample.area)
# Daily respiration in J per species and sample per square meter
RMresults$respirationJ <- with(RMresults, respirationW*ConFac_j2mgwm)
# Daily respiration in milligram carbon per species and sample per square meter
RMresults$respirationC <- with(RMresults, respirationJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+daily.RtoM~Habitat+Cruise+Station+Deployment+Tube, data = RMresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(respirationW+respirationJ+respirationC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube, data = RMresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-5])
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+daily.RtoM+respirationW+respirationJ+respirationC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "daily.RtoM.mean", "daily.RtoM.se", "respirationW.mean", "respirationW.se", "respirationJ.mean", "respirationJ.se", "respirationC.mean", "respirationC.se", "Depth.length")]
names(out) <- c("Habitat", "Cruise", "Station", "Depth", "daily.RtoM", "daily.RtoM.se", "respirationW", "respirationW.se", "respirationJ", "respirationJ.se", "respirationC", "respirationC.se", "n")
kable(out)
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
#geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position=position_dodge(width=2))+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position="dodge")+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position="dodge")+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position="jitter")+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position="dodge")+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(daily.RtoM~Depth, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth, y=daily.RtoM,
ymin=daily.RtoM-daily.RtoM.se, ymax=daily.RtoM+daily.RtoM.se,
shape=Habitat, colour=Habitat, fill=Habitat, linetype=Habitat))+
geom_point(size=5, position="jitter")+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
geom_errorbar(linetype=1, position="jitter")+
scale_colour_manual(values=c("#e41a1c", "#4daf4a"))+
scale_fill_manual(values=c("#e41a1c", "#4daf4a"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression("Mass-specific"~respiration~(day^-1)))+
theme_bw() %+replace% large #%+replace% dark
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(bbbs)
mac
subset(mac, Cruise="OR1_1102" & Station=="GS4")
subset(mac, Cruise="OR1_1102" & Station=="GS4")
subset(mac, Cruise=="OR1_1102" & Station=="GS4")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
library(swtmap)
library(TWBathyMap)
library(maptools)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Size~Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Abundance", keep.names = T)
pola <- cbind(pola[, 1:4], Section="0-15", pola[, 5:6], Comment="")
# Replace polycahete sorting abundance with correct abundance from size data
sort <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=2)
sort <- rbind(subset(sort, Taxon!="Polychaeta"), pola)
# Remove Cyclopoida and Calanoida
sort <- subset(sort, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Total abundance by tube
abun <- summaryBy(Abundance~Cruise+Station+Deployment+Tube, data=as.data.frame(sort), FUN=sum, keep.names = TRUE)
depth <- read_excel("../excel/GPSC_macro_sorting_2020.07.31.xlsx", sheet=1)
abun <- cbind(depth[match(paste(abun$Cruise, abun$Station), paste(depth$Cruise, depth$Station)),], Abundance=abun$Abundance)
dat <- subset(abun, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126")
# Remove outlier samples with only 1 individuals
bad <- with(dat, Abundance <=1 | (Cruise=="OR1_1102" & Station == "GS4") )
bad
which(bad)
dat[bad,]
