print(b1, split=c(1,2,3,4), more=TRUE)
print(b2, split=c(2,2,3,4), more=TRUE)
#
print(c1, split=c(1,3,3,4), more=TRUE)
print(c2, split=c(2,3,3,4), more=TRUE)
print(c3, split=c(3,3,3,4), more=TRUE)
print(d1, split=c(1,4,3,4), more=TRUE)
print(d2, split=c(2,4,3,4), more=TRUE)
print(d3, split=c(3,4,3,4))
}
dianostic_plot(f, y = "log10(Density)")
# In canyon
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Canyon"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# On slope
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Slope"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
dat.mean.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=dat.mean, FUN=c(mean, sd, length))
dat.mean.mean$Density.se <- dat.mean.mean$Density.sd/dat.mean.mean$Density.length^0.5
dat.mean.mean <- dat.mean.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(dat.mean.mean) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
ggplot(data=dat.mean.mean,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
dat.mean.mean$Longitude <- round(dat.mean.mean$Longitude, 4)
dat.mean.mean$Latitude <- round(dat.mean.mean$Latitude, 4)
dat.mean.mean$Depth <- round(dat.mean.mean$Depth, 0)
dat.mean.mean$Density <- round(dat.mean.mean$Density, 0)
dat.mean.mean$sd <- round(dat.mean.mean$sd, 1)
dat.mean.mean$sd <- round(dat.mean.mean$se, 1)
kable(dat.mean.mean)
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei_s, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(Biomass)~Depth, data=x) %>% summary)
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei_s, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
#out$Longitude <- round(out$Longitude, 4)
#out$Latitude <- round(out$Latitude, 4)
#out$Depth <- round(out$Depth, 0)
#out$Biomass <- round(out$Biomass, 0)
#out$sd <- round(out$sd, 1)
#out$se <- round(out$se, 1)
kable(out, align="c")
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(Biomass)~Depth, data=x) %>% summary)
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_errorbar(linetype=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large
f <- gls(log10(Biomass) ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=out, method = "REML")
kable(summary(f)$tTable)
dianostic_plot(f, y = "log10(Biomass)")
dat.mean <- summaryBy(Biomass+Longitude+Latitude+Depth~Region+Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(swtmap)
library(maptools)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- subset(abun, Cruise!="OR1_1128" & Cruise!="OR1_1132")
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
#dat.mean$Longitude <- round(dat.mean$Longitude, 4)
#dat.mean$Latitude <- round(dat.mean$Latitude, 4)
#dat.mean$Depth <- round(dat.mean$Depth, 0)
#dat.mean$Density <- round(dat.mean$Density, 0)
#dat.mean$sd <- round(dat.mean$sd, 1)
#dat.mean$se <- round(dat.mean$se, 1)
kable(dat.mean, align="c")
getwd()
splitBy(~Habitat, dat.mean) %>% lapply(FUN=function(x)lm(log10(Density)~Depth, data=x) %>% summary)
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
library(bbbs)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(swtmap)
library(maptools)
library(knitr)
library(nlme)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
jet.colors <-colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
# Sorting data
abun   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=2)
abun <- subset(abun, Cruise!="OR1_1128" & Cruise!="OR1_1132")
abun <- summaryBy(Abundance~Cruise+Station+Station+Deployment+Tube+Subcore, data=as.data.frame(abun), FUN=sum, keep.names=T)
abun$Density <- abun$Abundance/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Density~Cruise+Station, data=abun, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Density.se <- dat.mean$Density.sd/dat.mean$Density.length^0.5
cord   <- read_excel("../excel/GPSC_meio_sorting_2016.08.18.xlsx", sheet=1)
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
dat.mean<- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(dat.mean)[8:11] <- c("Density", "sd", "n", "se")
#dat.mean$Longitude <- round(dat.mean$Longitude, 4)
#dat.mean$Latitude <- round(dat.mean$Latitude, 4)
#dat.mean$Depth <- round(dat.mean$Depth, 0)
#dat.mean$Density <- round(dat.mean$Density, 0)
#dat.mean$sd <- round(dat.mean$sd, 1)
#dat.mean$se <- round(dat.mean$se, 1)
kable(dat.mean, align="c")
splitBy(~Habitat, dat.mean) %>% lapply(FUN=function(x)lm(log10(Density)~Depth, data=x) %>% summary)
ggplot(data= dat.mean,
aes(x=Depth, y=log10(Density), ymin=log10(Density-se), ymax=log10(Density+se), colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19, 1))+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~density~(indiv~m^-2)))+
#scale_y_log10()+
theme_bw() %+replace% large
f <- gls(log10(Density) ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=dat.mean, method = "REML")
kable(summary(f)$tTable)
# Function to plot dianotics plot
dianostic_plot <-
function(f, y){
# standardized residuals versus fitted values
a1 <- plot(f, resid(., type = "p") ~ fitted(.) | Habitat, abline = 0)
a2 <- plot(f, resid(., type = "p") ~ fitted(.) | Cruise, abline = 0)
a3 <- plot(f, resid(., type = "p") ~ fitted(.), abline = 0)
# box-plots of residuals
b1<-plot(f, Habitat ~ resid(.))
b2 <- plot(f, Cruise ~ resid(.))
# observed versus fitted values
c1<-plot(f, paste(paste(y, "fitted(.)", sep="~"), "Habitat", sep="|") %>% formula, abline = c(0,1))
c2<-plot(f, paste(paste(y, "fitted(.)", sep="~"), "Cruise", sep="|") %>% formula, abline = c(0,1))
c3<-plot(f, paste(y, "fitted(.)", sep="~") %>% formula, abline = c(0,1))
# QQ plot
d1<-qqnorm(f, ~ resid(., type = "p") | Habitat, abline = c(0,1))
d2<-qqnorm(f, ~ resid(., type = "p") | Cruise, abline = c(0,1))
d3<-qqnorm(f, ~ resid(., type = "p"), abline = c(0,1))
print(a1, split=c(1,1,3,4), more=TRUE)
print(a2, split=c(2,1,3,4), more=TRUE)
print(a3, split=c(3,1,3,4), more=TRUE)
print(b1, split=c(1,2,3,4), more=TRUE)
print(b2, split=c(2,2,3,4), more=TRUE)
#
print(c1, split=c(1,3,3,4), more=TRUE)
print(c2, split=c(2,3,3,4), more=TRUE)
print(c3, split=c(3,3,3,4), more=TRUE)
print(d1, split=c(1,4,3,4), more=TRUE)
print(d2, split=c(2,4,3,4), more=TRUE)
print(d3, split=c(3,4,3,4))
}
dianostic_plot(f, y = "log10(Density)")
# In canyon
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Canyon"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
# On slope
f <- gls(log10(Density) ~ Depth+Cruise+Depth:Cruise, data=subset(dat.mean, Habitat == "Slope"), method = "REML")
kable(summary(f)$tTable)
kable(anova(f))
dat.mean.mean <- summaryBy(Density+Longitude+Latitude+Depth~Habitat+Station, data=dat.mean, FUN=c(mean, sd, length))
dat.mean.mean$Density.se <- dat.mean.mean$Density.sd/dat.mean.mean$Density.length^0.5
dat.mean.mean <- dat.mean.mean[,c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Density.length", "Density.mean", "Density.sd", "Density.se")]
names(dat.mean.mean) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth","n", "Density", "sd", "se")
ggplot(data=dat.mean.mean,
aes(x=Depth, y=log10(Density),
ymin=log10(Density-se), ymax=log10(Density+se),
colour=Habitat, linetype=Habitat, shape=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~density~(ind~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
#dat.mean.mean$Longitude <- round(dat.mean.mean$Longitude, 4)
#dat.mean.mean$Latitude <- round(dat.mean.mean$Latitude, 4)
#dat.mean.mean$Depth <- round(dat.mean.mean$Depth, 0)
#dat.mean.mean$Density <- round(dat.mean.mean$Density, 0)
#dat.mean.mean$sd <- round(dat.mean.mean$sd, 1)
#dat.mean.mean$sd <- round(dat.mean.mean$se, 1)
kable(dat.mean.mean)
dat.sum <- summaryBy(Wt~Cruise+Station+Deployment+Tube+Subcore, data=mei_s, FUN=sum, keep.names = TRUE)
dat.sum$Biomass <- dat.sum$Wt/(pi*(2.5/2)^2/10000)
dat.mean <- summaryBy(Biomass~Cruise+Station, data=dat.sum, FUN=c(mean, sd, length), keep.names = TRUE)
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
keep <- match(paste(dat.mean$Cruise, dat.mean$Station), paste(cord$Cruise, cord$Station))
out <- cbind(cord[keep, 3:9], dat.mean[, 3:6])
names(out) <- c("Habitat",   "Cruise", "Station", "Deployment", "Longitude", "Latitude", "Depth", "Biomass", "sd", "n", "se")
#out$Longitude <- round(out$Longitude, 4)
#out$Latitude <- round(out$Latitude, 4)
#out$Depth <- round(out$Depth, 0)
#out$Biomass <- round(out$Biomass, 0)
#out$sd <- round(out$sd, 1)
#out$se <- round(out$se, 1)
kable(out, align="c")
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(log10(Biomass)~Depth, data=x) %>% summary)
ggplot(data= out,
aes(x=Depth, y=log10(Biomass), ymin=log10(Biomass-se), ymax=log10(Biomass+se), colour=Habitat, shape=Habitat, linetype=Habitat))+
geom_point(size=5)+
geom_errorbar(linetype=1)+
#stat_smooth(method="lm", formula=y~x, alpha=0.2)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large
f <- gls(log10(Biomass) ~ Habitat+Depth+Cruise+Habitat:Depth+Habitat:Cruise+Depth:Cruise, data=out, method = "REML")
kable(summary(f)$tTable)
dianostic_plot(f, y = "log10(Biomass)")
dat.mean <- summaryBy(Biomass+Longitude+Latitude+Depth~Region+Habitat+Station, data=out, FUN=c(mean, sd, length))
dat.mean$Biomass.se <- dat.mean$Biomass.sd/dat.mean$Biomass.length^0.5
out <- dat.mean[, c("Habitat", "Station", "Longitude.mean", "Latitude.mean", "Depth.mean", "Biomass.length", "Biomass.mean", "Biomass.sd", "Biomass.se")]
names(out) <- c("Habitat", "Station", "Longitude", "Latitude", "Depth", "n", "Biomass", "sd", "se")
ggplot(data=out,
aes(x=Depth, y=log10(Biomass),
ymin=log10(Biomass-se), ymax=log10(Biomass+se),
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
scale_colour_manual(values=c("black","gray30"))+
scale_shape_manual(values=c(19,1))+
geom_errorbar(linetype=1)+
scale_linetype_manual(values=c(1,2))+
labs(x="Depth (m)", y=expression(Log[10]~biomass~(mg~m^-2)))+
theme_bw() %+replace% large #%+replace% dark
out$Longitude <- round(out$Longitude, 4)
out$Latitude <- round(out$Latitude, 4)
out$Depth <- round(out$Depth, 0)
out$Biomass <- round(out$Biomass, 0)
out$sd <- round(out$sd, 1)
out$se <- round(out$se, 1)
kable(out, align="c")
knitr::opts_chunk$set(echo = TRUE)
library(bbbs)
library(BenthicPro)
library(ggplot2)
library(plyr)
library(doBy)
library(readxl)
library(knitr)
large <- theme(legend.title = element_text(size=20),
legend.text = element_text(size=20),
axis.title = element_text(size=20),
axis.text = element_text(size=20))
rotate <- theme(axis.text.x = element_text(size=20, angle=60, hjust=0.5))
# dark theme for ggplot
dark <- theme(plot.background = element_rect(colour = 'NA', fill = 'gray10'),
panel.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.background = element_rect(colour = 'NA', fill = 'transparent'),
legend.title = element_text(colour = 'white', size=20),
legend.text = element_text(colour = 'white', size=20),
axis.title = element_text(colour = 'white', size=20),
axis.text = element_text(colour = 'white', size=20),
axis.ticks = element_line(colour = 'white'),
panel.border = element_rect(fill = 'NA', colour = 'white'),
panel.grid.major = element_line(colour = 'gray30'),
panel.grid.minor = element_line(colour = 'gray20'))
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
# Remove Cyclopoida and Calanoida
dat.sum <- subset(dat.sum, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Match to marofauna production parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate P/B ratio
individualPB<-BenthicPB(dat.sum)
PBresults<-cbind(dat.sum,individualPB)
# annual secondary production in mulligram WM per species and sample per square meter
PBresults$productionWt <- with(PBresults, annual.PtoB*Wt/Sample.area)
# annual secondary production in Joule per species and sample per square meter
PBresults$productionJ <- with(PBresults, productionWt*ConFac_j2mgwm)
# conversion from Joule to milligram carbon per square meter
PBresults$productionC <- with(PBresults, productionJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+annual.PtoB+lowerCI+upperCI~Habitat+Cruise+Station+Deployment+Tube, data = PBresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(productionWt+productionJ+productionC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube, data = PBresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-5])
# Remove outlier samples with only 1 individuals
bad <- with(pd, Count <=1 | (Cruise=="OR1_1102" & Station == "GS4") )
dat <- subset(dat, !bad)
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+annual.PtoB+lowerCI+upperCI+productionWt+productionJ+productionC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "annual.PtoB.mean", "lowerCI.mean", "upperCI.mean", "productionWt.mean", "productionWt.se", "productionJ.mean", "productionJ.se", "productionC.mean", "productionC.se", "Depth.length")]
kable(out)
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(annual.PtoB.mean~Depth.mean, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth.mean, y=annual.PtoB.mean,
#ymin=annual.PtoB.mean-lowerCI.mean, ymax=annual.PtoB.mean+upperCI.mean,
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
#geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(P/B~Ratio))+
theme_bw() %+replace% large #%+replace% dark
dat <- subset(mac, Cruise=="OR1_1096"|Cruise=="OR1_1102"|Cruise=="OR1_1114"|Cruise=="OR1_1126"|Cruise=="OR1_1128"|Cruise=="OR1_1132")
dat.sum <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=dat, FUN=c(sum, length))
names(dat.sum)[-1:-6] <- c("Wt", "Count")
dat.sum$Sample.area <- mac$Area[match(with(dat.sum, paste(Cruise, Station)), with(mac, paste(Cruise, Station)))]
# Convert the numbers of polychaete specimen (with head) to abundance
pols <- subset(mac, Taxon=="Polychaeta" & (Condition=="FH" | Condition=="C" | Condition=="FHT"))
pola <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=pols, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(pola, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- pola$Count
# Convert the numbers of complete ophiroid specimens to abundance
ophs <- subset(mac, Taxon=="Ophiuroidea" & Condition=="C")
opha <- summaryBy(Wt~Habitat+Cruise+Station+Deployment+Tube+Taxon, data=ophs, FUN=length, var.names="Count", keep.names = T)
keep <- match(with(opha, paste(Cruise, Station, Deployment, Tube, Taxon)), with(dat.sum, paste(Cruise, Station, Deployment, Tube, Taxon)))
dat.sum$Count[keep] <- opha$Count
# Remove Cyclopoida and Calanoida
dat.sum <- subset(dat.sum, !(Taxon=="Cyclopoida"|Taxon=="Calanoida"))
# Match to marofauna production parameters
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c("ConFac_j2mgwm", "ConFac_j2mgc")])
dat.sum$Bodymass <- with(dat.sum, Wt*ConFac_j2mgwm/Count)
dat.sum <- cbind(dat.sum, env[match(with(dat.sum, paste(Cruise, Station)), with(env, paste(Cruise, Station))), c("Temperature", "Depth")])
dat.sum <- cbind(dat.sum, mpr[match(dat.sum$Taxon, mpr$Taxon), c(-1:-3, -21)])
# Calculate P/B ratio
individualPB<-BenthicPB(dat.sum)
PBresults<-cbind(dat.sum,individualPB)
# annual secondary production in mulligram WM per species and sample per square meter
PBresults$productionWt <- with(PBresults, annual.PtoB*Wt/Sample.area)
# annual secondary production in Joule per species and sample per square meter
PBresults$productionJ <- with(PBresults, productionWt*ConFac_j2mgwm)
# conversion from Joule to milligram carbon per square meter
PBresults$productionC <- with(PBresults, productionJ/ConFac_j2mgc)
# Average P/B ratio by tube
p2b <- summaryBy(Depth+annual.PtoB+lowerCI+upperCI~Habitat+Cruise+Station+Deployment+Tube, data = PBresults, fun = mean, keep.names = TRUE)
# Summation production by tube
pd <- summaryBy(productionWt+productionJ+productionC+Count+Wt~Habitat+Cruise+Station+Deployment+Tube, data = PBresults, fun = sum, keep.names = TRUE)
pd <- cbind(p2b, pd[, -1:-5])
# Remove outlier samples with only 1 individuals
bad <- with(pd, Count <=1 | (Cruise=="OR1_1102" & Station == "GS4") )
dat <- subset(dat, !bad)
se <- function(x) sd(x)/length(x)^0.5
out <- summaryBy(Depth+annual.PtoB+lowerCI+upperCI+productionWt+productionJ+productionC~Habitat+Cruise+Station, data = pd, FUN = c(mean, sd, length, se))
out <- out[, c("Habitat", "Cruise", "Station", "Depth.mean", "annual.PtoB.mean", "lowerCI.mean", "upperCI.mean", "productionWt.mean", "productionWt.se", "productionJ.mean", "productionJ.se", "productionC.mean", "productionC.se", "Depth.length")]
kable(out)
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(annual.PtoB.mean~Depth.mean, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth.mean, y=annual.PtoB.mean,
#ymin=annual.PtoB.mean-lowerCI.mean, ymax=annual.PtoB.mean+upperCI.mean,
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
#geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(P/B~Ratio))+
theme_bw() %+replace% large #%+replace% dark
splitBy(~Habitat, out) %>% lapply(FUN=function(x)lm(annual.PtoB.mean~Depth.mean, data=x) %>% summary)
ggplot(data=out,
aes(x=Depth.mean, y=annual.PtoB.mean,
#ymin=annual.PtoB.mean-lowerCI.mean, ymax=annual.PtoB.mean+upperCI.mean,
shape=Habitat, colour=Habitat, linetype=Habitat))+
geom_point(size=5)+
stat_smooth(method="lm", formula=y~x)+
#geom_errorbar(linetype=1)+
scale_colour_manual(values=c("black","gray30"))+
scale_linetype_manual(values=c(1,2))+
scale_shape_manual(values=c(19,1))+
labs(x="Depth (m)", y=expression(P/B~Ratio))+
theme_bw() %+replace% large #%+replace% dark
head(out)
